{"version":3,"sources":["/home/jaconil/workspaces/react-interactive-timeline/src/Period/Event.module.css","/home/jaconil/workspaces/react-interactive-timeline/src/Period/Period.module.css","/home/jaconil/workspaces/react-interactive-timeline/src/Steps/StepBars.module.css","/home/jaconil/workspaces/react-interactive-timeline/src/Steps/StepLabels.module.css","/home/jaconil/workspaces/react-interactive-timeline/src/Timeline.module.css","/home/jaconil/workspaces/react-interactive-timeline/src/interactions/CurrentDateBar.module.css","/home/jaconil/workspaces/react-interactive-timeline/src/context.ts","/home/jaconil/workspaces/react-interactive-timeline/src/theme.ts","/home/jaconil/workspaces/react-interactive-timeline/src/calendar.ts","/home/jaconil/workspaces/react-interactive-timeline/src/interactions/index.ts","/home/jaconil/workspaces/react-interactive-timeline/src/interactions/useMousePanning.ts","/home/jaconil/workspaces/react-interactive-timeline/src/interactions/CurrentDateBar.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/interactions/PanControl.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/interactions/ZoomControl.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/Steps/StepBars.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/Steps/StepLabels.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/TimelineRow.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/Period/LabelAbovePeriod.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/Period/Period.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/Period/LabelAboveEvent.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/Period/Event.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/Timeline.tsx","/home/jaconil/workspaces/react-interactive-timeline/src/index.ts","/home/jaconil/workspaces/react-interactive-timeline/src/test.mdx"],"names":["module","exports","TimelineContext","React","createContext","defaultTheme","backgroundColor","primaryColor","secondaryColor","tertiaryColor","eventColor","ThemeContext","units","parse","minUnit","date","startOf","Date","unparse","toISOString","parseDuration","duration","milliseconds","millisecond","second","minute","hour","day","month","year","getMinimumDuration","isBefore","dateA","dateB","getTime","diff","add","amount","unit","newDate","setDate","getDate","desiredMonth","getMonth","lastDayOfMonth","getFullYear","setMonth","Math","min","subtract","setMilliseconds","setSeconds","setMinutes","setHours","setFullYear","get","getMilliseconds","getSeconds","getMinutes","getHours","format","locale","maxUnit","internFormat","onlyUnit","monthLabels","en","fr","padded","u","paddedMs","formattedMonth","part1","indexOf","part2","getSteps","n","startDate","endDate","list","offsetUnits","correctedStartDate","moduloDay","stop","push","scale","durationToAdd","previousMonth","isImportantStep","step","getZoomLevels","zoomLevels","isMajorLevel","mainLevel","includes","i","parseContext","timelineContext","calendar","setStartDate","setEndDate","minDate","undefined","maxDate","minDuration","maxDuration","checkMinMaxBounds","newStartDate","newEndDate","realMinDuration","realMaxDuration","offset","panParsedTimeline","parsedDuration","zoomParsedTimeline","zoom","panTimeline","zoomTimeline","usePanning","panningEnabled","timelineRef","useState","panningStartPosition","setPanningStartPosition","onMouseDown","useCallback","event","clientX","onMouseUp","onMouseMove","current","distance","offsetWidth","useEffect","ref","addEventListener","removeEventListener","cx","classnames","bind","styles","CurrentDateBar","themeContext","useContext","currentDate","setCurrentDate","timelineBounds","getBoundingClientRect","left","width","timelineDuration","offsetLeft","className","style","color","borderColor","PanControl","props","renderer","ZoomControl","StepBars","getColor","levelIndex","isImportant","stepLevels","flatMap","level","steps","map","stepIndex","key","StepLabels","stepLevel","stepLevelIndex","size","TimelineRow","fixedHeight","fullHeight","rowRef","createRef","refs","getEventBoundingBox","getAttribute","containerRef","barSizeRef","labelSizeRef","getMax","max","Number","NEGATIVE_INFINITY","e","POSITIVE_INFINITY","right","height","lines","linesHeight","lineByRefIndex","canBeAddedOnLine","currentLine","currentElement","some","testedElement","forEach","refIndex","foundLine","currentLineIndex","length","top","reduce","acc","index","timelineRow","timelineRowFullHeight","Children","children","child","isValidElement","sizeRefs","cloneElement","memo","label","position","labelLeftOffset","containerLeft","containerWidth","labelWidth","barWidth","marginLeft","labelAbove","labelAboveLabel","labelAboveBar","component","timelineStartDate","timelineEndDate","parsedStartDate","parsedEndDate","console","error","periodStartDateOffset","periodPosition","DefaultPeriod","LabelAbovePeriod","customStyle","labelAboveLabelContainer","parsedDate","LabelAboveEvent","Period","Timeline","stepMinWidth","mousePanning","theme","rest","setContainerWidth","setParsedStartDate","setParsedEndDate","previousDateValues","useRef","getParsedStepMinWidth","String","value","parseFloat","computeStepsPosition","lastOffset","reduceRight","computeStepLevels","parsedStepMinWidth","maxSteps","stepMinDuration","filter","zoomLevel","chosenMainLevel","chosenSecondaryLevels","secondaryLevels","onResize","parsedMinDate","parsedMaxDate","parsedMinDuration","parsedMaxDuration","useMousePanning","Provider","handleWidth","defaultProps","defaultCalendar","Row","Event","interactions","pan","layoutProps","MDXContent","components","mdxType","__position","__code","__scope","this","Playground","__codesandbox","isMDXComponent"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,WAAa,0BAA0B,gBAAkB,+BAA+B,yBAA2B,wCAAwC,cAAgB,+B,iDCA7LD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,gBAAkB,gCAAgC,cAAgB,gC,kDCA5JD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,4B,oDCAlED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,kBAAoB,sCAAsC,oBAAsB,wCAAwC,UAAY,gC,4CCAlMD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,YAAc,8BAA8B,sBAAwB,0C,+DCA5HD,EAAOC,QAAU,CAAC,eAAiB,yC,uuEC4D5B,IAAMC,EAAkBC,IAAMC,cAK3B,M,8YCxDH,IAAMC,EAAsB,CACjCC,gBAAiB,UACjBC,aAAc,OACdC,eAAgB,OAChBC,cAAe,OACfC,WAAY,W,4LAGP,IAAMC,EAAeR,IAAMC,cAAqBC,G,22BCWvD,IAOMO,EAAQ,CACZ,cACA,SACA,SACA,OACA,MACA,QACA,QAGF,SAASC,EAAMC,GACb,OAAO,SAAAC,GAAI,OAAIC,EAAQ,IAAIC,KAAKF,GAAOD,IAGzC,SAASI,EAAQH,GACf,OAAOA,EAAKI,cAGd,SAASC,EAAcC,GACrB,IAAIC,EAAe,EAcnB,OAZAA,GAAgBD,EAASE,YAAcF,EAASE,YAAc,EAC9DD,GAAgBD,EAASG,OA7BI,IA8BzBH,EAASG,OACT,EACJF,GAAgBD,EAASI,OA/BI,IAgCzBJ,EAASI,OACT,EACJH,GAAgBD,EAASK,KAjCE,KAiCKL,EAASK,KAA8B,EACvEJ,GAAgBD,EAASM,IAjCC,MAiCKN,EAASM,IAA4B,EACpEL,GAAgBD,EAASO,MAjCG,OAiCKP,EAASO,MAAgC,EAC1EN,GAAgBD,EAASQ,KAjCE,QAiCKR,EAASQ,KAA8B,EAKzE,SAASC,EAAmBhB,GAC1B,OAAO,WACL,OAAQA,GACN,IAAK,SACH,OA/CuB,IAgDzB,IAAK,SACH,OAhDuB,IAiDzB,IAAK,OACH,OAjDqB,KAkDvB,IAAK,MACH,OAlDoB,MAmDtB,IAAK,QACH,OAnDsB,OAoDxB,IAAK,OACH,OApDqB,QAqDvB,QACE,OAAO,IAKf,SAASiB,EAASC,EAAmBC,GACnC,OAAOD,EAAME,UAAYD,EAAMC,UAGjC,SAASC,EAAKH,EAAmBC,GAC/B,OAAOD,EAAME,UAAYD,EAAMC,UAGjC,SAASE,EACPrB,EACAsB,GAEa,IADbC,EACY,uDADE,cAEVC,EAAU,IAAItB,KAAKF,EAAKmB,WAE5B,OAAQI,GACN,IAAK,cACH,OAAO,IAAIrB,KAAKF,EAAKmB,UAAYG,GACnC,IAAK,SACH,OAAOD,EAAIrB,EAnFc,IAmFRsB,EAAiC,eACpD,IAAK,SACH,OAAOD,EAAIrB,EApFc,IAoFRsB,EAAiC,eACpD,IAAK,OACH,OAAOD,EAAIrB,EArFY,KAqFNsB,EAA+B,eAClD,IAAK,MAEH,OADAE,EAAQC,QAAQzB,EAAK0B,UAAYJ,GAC1BE,EACT,IAAK,QACH,IAAMG,EAAe3B,EAAK4B,WAAaN,EACjCO,EAAiB,IAAI3B,KAAKF,EAAK8B,cAAeH,EAAe,EAAG,GAMtE,OAJAH,EAAQO,SACNJ,EACAK,KAAKC,IAAIJ,EAAeH,UAAW1B,EAAK0B,YAEnCF,EACT,IAAK,OACH,OAAOH,EAAIrB,EAAe,GAATsB,EAAa,SAChC,QACE,OAAOtB,GAIb,SAASkC,EACPlC,EACAsB,GAEa,IADbC,EACY,uDADE,cAEd,OAAOF,EAAIrB,GAAOsB,EAAQC,GAG5B,SAAStB,EAAQD,EAAkBuB,GACjC,IAAIC,EAAU,IAAItB,KAAKF,EAAKmB,WAE5B,OAAQI,GACN,IAAK,SAEH,OADAC,EAAQW,gBAAgB,GACjBX,EACT,IAAK,SAEH,OADAA,EAAQY,WAAW,EAAG,GACfZ,EACT,IAAK,OAEH,OADAA,EAAQa,WAAW,EAAG,EAAG,GAClBb,EACT,IAAK,MAEH,OADAA,EAAQc,SAAS,EAAG,EAAG,EAAG,GACnBd,EACT,IAAK,QAGH,OAFAA,EAAQC,QAAQ,GAChBD,EAAQc,SAAS,EAAG,EAAG,EAAG,GACnBd,EACT,IAAK,OAGH,OAFAA,EAAQe,YAAYvC,EAAK8B,cAAe,EAAG,GAC3CN,EAAQc,SAAS,EAAG,EAAG,EAAG,GACnBd,EACT,QACE,OAAOA,GAIb,SAASgB,EAAIxC,EAAkBuB,GAC7B,OAAQA,GACN,IAAK,cACH,OAAOvB,EAAKyC,kBACd,IAAK,SACH,OAAOzC,EAAK0C,aACd,IAAK,SACH,OAAO1C,EAAK2C,aACd,IAAK,OACH,OAAO3C,EAAK4C,WACd,IAAK,MACH,OAAO5C,EAAK0B,UACd,IAAK,QACH,OAAO1B,EAAK4B,WACd,IAAK,OACH,OAAO5B,EAAK8B,eAIlB,SAASe,EAAOC,EAAgB/C,EAAgBgD,GAmF9C,OAlFA,SAASC,EACPhD,EACAuB,GAES,IADT0B,EACQ,wDACFC,EAA8C,CAClDC,GAAI,CACF,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,GAAI,CACF,QACA,WACA,OACA,OACA,MACA,OACA,QACA,UACA,QACA,OACA,OACA,YAIEC,EAAS,SAACC,GAAD,OAAgBA,EAAI,GAAJ,WAAaA,GAAb,UAAsBA,IAC/CC,EAAW,SAACD,GAAD,OACfA,EAAI,GAAJ,YAAcA,GAAMA,EAAI,IAAJ,WAAcA,GAAd,UAAuBA,IAE7C,OAAQ/B,GACN,IAAK,cACH,OAAO0B,EAAQ,UACRjD,EAAKyC,kBADG,gBAERO,EAAahD,EAAM,UAFX,YAEwBuD,EACjCvD,EAAKyC,oBAEb,IAAK,SACH,OAAOQ,EAAQ,UACRI,EAAOrD,EAAK0C,cADJ,eAERM,EAAahD,EAAM,UAFX,YAEwBqD,EAAOrD,EAAK0C,eACrD,IAAK,SACH,MAAM,GAAN,OAAUW,EAAOrD,EAAK4C,YAAtB,YAAqCS,EAAOrD,EAAK2C,eACnD,IAAK,OACH,MAAe,UACRU,EAAOrD,EAAK4C,YADZK,EAAQ,WAGjB,IAAK,MACH,OAAOA,EAAQ,UACRI,EAAOrD,EAAK0B,YADJ,UAER2B,EAAOrD,EAAK0B,WAFJ,YAEkBsB,EAAahD,EAAM,UACtD,IAAK,QACH,IAAMwD,EAAiBN,EAAYJ,GAAQ9C,EAAK4B,YAChD,OAAOqB,EAAQ,UACRO,GADQ,UAERA,EAFQ,YAEUR,EAAahD,EAAM,SAC9C,IAAK,OACH,MAAM,GAAN,OAAUA,EAAK8B,eACjB,QACE,IAAM2B,EACJ5D,EAAM6D,QAAQ3D,GAAWF,EAAM6D,QAAQ,OAAvC,UACOV,EAAahD,EAAMD,IAD1B,UAEOiD,EAAahD,EAAM,QACtB2D,EACJ9D,EAAM6D,QAAQ3D,GAAWF,EAAM6D,QAAQ,OAAvC,aACUV,EAAahD,EAAMD,IACzB,GAEN,MAAM,GAAN,OAAU0D,GAAV,OAAkBE,KAO1B,SAASC,EAASrC,EAAasC,GAC7B,OAAO,SAACC,EAAuBC,GAC7B,IAAMC,EAAO,GAETC,EAAczB,EAAIsB,EAAWvC,GAEjC,GAAa,QAATA,EAAgB,CAClB,IAAM2C,EAAqBhC,EACzB4B,EACAD,EAAI,GAAKrB,EAAIsB,EAAWvC,IAAS,GAAKsC,EAAI,EAC1CtC,GAEI4C,EAAY3B,EAAI0B,EAAoB3C,GAAQsC,EAAI,EAAI,EAC1DI,EAAczB,EAAI0B,EAAoB3C,GAAQ4C,EAMhD,IAHA,IAAInE,EAAOkC,EAASjC,EAAQ6D,EAAWvC,GAAO0C,EAAcJ,EAAGtC,GAC3D6C,GAAO,GAEHA,GAAM,CACPpD,EAAShB,EAAM+D,KAClBK,GAAO,GAGTJ,EAAKK,KAAK,CAAErE,OAAMuB,OAAM+C,MAAOT,IAE/B,IAAIU,EAAgBV,EACdW,EAAyB,QAATjD,EAAiBiB,EAAIxC,EAAM,SAAW,KAE/C,QAATuB,GAAkBsC,EAAI,GAAyB,IAApBrB,EAAIxC,EAAMuB,KACvCgD,EAAgBV,EAAI,GAGtB7D,EAAOqB,EAAIrB,EAAMuE,EAAehD,GAEnB,QAATA,IACFvB,EAAOqB,EAAIrB,EAAM6D,EAAI,GAAKrB,EAAIxC,EAAMuB,IAAS,GAAK,EAAI,EAAG,SAErDiB,EAAIxC,EAAM,WAAawE,IACzBxE,EAAOC,EAAQD,EAAM,WAK3B,OAAOgE,GAIX,SAASS,EAAgBC,GACvB,MAAkB,SAAdA,EAAKnD,MACAiB,EAAIkC,EAAK1E,KAAM,SAAW,GAAK0E,EAAKJ,SAAW,EAM1D,SAASK,EAAc5E,EAAgBgD,GACrC,IAAM6B,EAA0B,GAiJhC,GA9IE/E,EAAM6D,QAAQ3D,IAAYF,EAAM6D,QAAQ,gBACxC7D,EAAM6D,QAAQX,IAAYlD,EAAM6D,QAAQ,gBAExCkB,EAAWP,KACT,CACE9C,KAAM,cACNjB,SAAU,EACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,cAAe,IAEpC,CACErC,KAAM,cACNjB,SAAU,IACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,cAAe,MAEpC,CACErC,KAAM,cACNjB,SAAU,IACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,cAAe,OAMtC/D,EAAM6D,QAAQ3D,IAAYF,EAAM6D,QAAQ,WACxC7D,EAAM6D,QAAQX,IAAYlD,EAAM6D,QAAQ,WAExCkB,EAAWP,KACT,CACE9C,KAAM,SACNjB,SAAU,IACVuE,aAAc,SAAAC,GAAS,MAAuB,gBAAnBA,EAAUvD,MACrCqC,SAAUA,EAAS,SAAU,IAE/B,CACErC,KAAM,SACNjB,SAAU,IACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,SAAU,IAE/B,CACErC,KAAM,SACNjB,SAAU,IACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,SAAU,KAE/B,CACErC,KAAM,SACNjB,SAAU,IACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,SAAU,MAMjC/D,EAAM6D,QAAQ3D,IAAYF,EAAM6D,QAAQ,WACxC7D,EAAM6D,QAAQX,IAAYlD,EAAM6D,QAAQ,WAExCkB,EAAWP,KACT,CACE9C,KAAM,SACNjB,SAAU,IACVuE,aAAc,SAAAC,GAAS,MAAuB,WAAnBA,EAAUvD,MACrCqC,SAAUA,EAAS,SAAU,IAE/B,CACErC,KAAM,SACNjB,SAAU,IACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,SAAU,IAE/B,CACErC,KAAM,SACNjB,SAAU,IACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,SAAU,KAE/B,CACErC,KAAM,SACNjB,SAAU,KACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,SAAU,MAMjC/D,EAAM6D,QAAQ3D,IAAYF,EAAM6D,QAAQ,SACxC7D,EAAM6D,QAAQX,IAAYlD,EAAM6D,QAAQ,SAExCkB,EAAWP,KACT,CACE9C,KAAM,OACNjB,SAAU,KACVuE,aAAc,SAAAC,GAAS,MAAuB,WAAnBA,EAAUvD,MACrCqC,SAAUA,EAAS,OAAQ,IAE7B,CACErC,KAAM,OACNjB,SAAU,MACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,OAAQ,IAE7B,CACErC,KAAM,OACNjB,SAAU,MACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,OAAQ,KAM/B/D,EAAM6D,QAAQ3D,IAAYF,EAAM6D,QAAQ,QACxC7D,EAAM6D,QAAQX,IAAYlD,EAAM6D,QAAQ,QAExCkB,EAAWP,KACT,CACE9C,KAAM,MACNjB,SAAU,MACVuE,aAAc,SAAAC,GAAS,MACrB,CAAC,OAAQ,SAAU,SAAU,eAAeC,SAASD,EAAUvD,OACjEqC,SAAUA,EAAS,MAAO,IAE5B,CACErC,KAAM,MACNjB,SAAU,MACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,MAAO,IAE5B,CACErC,KAAM,MACNjB,SAAU,MACVuE,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,MAAO,MAM9B/D,EAAM6D,QAAQ3D,IAAYF,EAAM6D,QAAQ,UACxC7D,EAAM6D,QAAQX,IAAYlD,EAAM6D,QAAQ,SAExC,IADC,IAAD,aACK,IAAMsB,EAAC,KACVJ,EAAWP,KAAK,CACd9C,KAAM,QACNjB,SAtcsB,OAscZ0E,EACVH,aAAc,SAAAC,GAAS,MAAuB,QAAnBA,EAAUvD,MAAwB,IAANyD,GACvDpB,SAAUA,EAAS,QAASoB,MALhC,MAAgB,CAAC,EAAG,EAAG,EAAG,GAA1B,eAA+B,IAUjC,GACEnF,EAAM6D,QAAQ3D,IAAYF,EAAM6D,QAAQ,SACxC7D,EAAM6D,QAAQX,IAAYlD,EAAM6D,QAAQ,QAExC,IADC,IAAD,aACK,IAAMsB,EAAC,KACVJ,EAAWP,KACT,CACE9C,KAAM,OACNjB,SApdmB,QAodT0E,EACVH,aAAc,SAAAC,GAAS,MAAuB,UAAnBA,EAAUvD,MAA0B,IAANyD,GACzDpB,SAAUA,EAAS,OAAQoB,IAE7B,CACEzD,KAAM,OACNjB,SAAU,EAAI0E,EA1dK,QA2dnBH,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,OAAQ,EAAIoB,IAEjC,CACEzD,KAAM,OACNjB,SAAU,EAAI0E,EAheK,QAienBH,aAAc,kBAAM,GACpBjB,SAAUA,EAAS,OAAQ,EAAIoB,MAlBrC,MAAgB,CAAC,EAAG,GAAI,IAAK,KAA7B,eAAqC,IAwBvC,OAAOJ,EAGM,qBACb9B,EADa,uDACI,KACjB/C,EAFa,uDAEI,cACjBgD,EAHa,uDAGI,OAHJ,MAIT,CACJjD,MAAOA,EAAMC,GACbI,UACAE,gBACAU,mBAAoBA,EAAmBhB,GACvCiB,WACAI,OACAC,MACAa,WACAW,OAAQA,EAAOC,EAAQ/C,GACvB0E,kBACAG,WAAYD,EAAc5E,EAASgD,KCxfrC,SAASkC,EACPC,GAOA,MAAO,CACLC,SAAUD,EAAgBC,SAC1BrB,UAAWoB,EAAgBC,SAASrF,MAAMoF,EAAgBpB,WAC1DC,QAASmB,EAAgBC,SAASrF,MAAMoF,EAAgBnB,SACxDqB,aAAc,SAACpF,GAAD,OACZkF,EAAgBE,aAAaF,EAAgBC,SAAShF,QAAQH,KAChEqF,WAAY,SAACrF,GAAD,OACVkF,EAAgBG,WAAWH,EAAgBC,SAAShF,QAAQH,KAC9DsF,QAASJ,EAAgBI,QACrBJ,EAAgBC,SAASrF,MAAMoF,EAAgBI,cAC/CC,EACJC,QAASN,EAAgBM,QACrBN,EAAgBC,SAASrF,MAAMoF,EAAgBM,cAC/CD,EACJE,YAAaP,EAAgBO,YACzBP,EAAgBC,SAAS9E,cAAc6E,EAAgBO,kBACvDF,EACJG,YAAaR,EAAgBQ,YACzBR,EAAgBC,SAAS9E,cAAc6E,EAAgBQ,kBACvDH,GAIR,SAASI,EACPT,GAMC,IAECC,EAOED,EAPFC,SACArB,EAMEoB,EANFpB,UACAC,EAKEmB,EALFnB,QACAuB,EAIEJ,EAJFI,QACAE,EAGEN,EAHFM,QACAC,EAEEP,EAFFO,YACAC,EACER,EADFQ,YAGEE,EAAe9B,EACf+B,EAAa9B,EACbzD,EAAW6E,EAAS/D,KAAKyE,EAAYD,GAEnCE,EAAkBL,GAAeN,EAASpE,qBAC1CgF,EACJL,IACCJ,GAAWE,EAAUL,EAAS/D,KAAKoE,EAASF,QAAWC,GAE1D,GAAIjF,EAAWwF,EAAiB,CAC9B,IAAME,GAAUF,EAAkBxF,GAAY,EAE9CsF,EAAeT,EAASjD,SAAS0D,EAAcI,GAC/CH,EAAaV,EAAS9D,IAAIwE,EAAYG,GACtC1F,EAAW6E,EAAS/D,KAAKyE,EAAYD,GAGvC,GAAIG,GAAmBzF,EAAWyF,EAAiB,CACjD,IAAMC,GAAU1F,EAAWyF,GAAmB,EAE9CH,EAAeT,EAAS9D,IAAIuE,EAAcI,GAC1CH,EAAaV,EAASjD,SAAS2D,EAAYG,GAC3C1F,EAAW6E,EAAS/D,KAAKyE,EAAYD,GAGvC,GAAIN,GAAWH,EAASnE,SAAS4E,EAAcN,GAAU,CACvD,IAAMU,EAASb,EAAS/D,KAAKkE,EAASM,GAEtCA,EAAeT,EAAS9D,IAAIuE,EAAcI,GAC1CH,EAAaV,EAAS9D,IAAIwE,EAAYG,GAGxC,GAAIR,GAAWL,EAASnE,SAASwE,EAASK,GAAa,CACrD,IAAMG,EAASb,EAAS/D,KAAKyE,EAAYL,GAEzCI,EAAeT,EAASjD,SAAS0D,EAAcI,GAC/CH,EAAaV,EAASjD,SAAS2D,EAAYG,GAG7Cd,EAAgBE,aAAaQ,GAC7BV,EAAgBG,WAAWQ,GAGtB,SAASI,EACdf,EAMA5E,GACC,IACO6E,EAAiCD,EAAjCC,SAAUrB,EAAuBoB,EAAvBpB,UAAWC,EAAYmB,EAAZnB,QACvBmC,EACgB,kBAAb5F,EAAwBA,EAAW6E,EAAS9E,cAAcC,GAEnEqF,EAAkB,eACbT,EADY,CAEfpB,UAAWqB,EAAS9D,IAAIyC,EAAWoC,GACnCnC,QAASoB,EAAS9D,IAAI0C,EAASmC,MAI5B,SAASC,EACdjB,EAMAkB,GACC,IACOjB,EAAiCD,EAAjCC,SAAUrB,EAAuBoB,EAAvBpB,UAAWC,EAAYmB,EAAZnB,QAGvBiC,EAFWb,EAAS/D,KAAK2C,EAASD,GAEd,GAAKsC,EAAO,EAAIA,EAAO,EAAIA,GAErDT,EAAkB,eACbT,EADY,CAEfpB,UAAWqB,EAAS9D,IAAIyC,EAAWkC,GACnCjC,QAASoB,EAASjD,SAAS6B,EAASiC,MAIjC,SAASK,EACdnB,EAMA5E,GAEA2F,EAAkBhB,EAAaC,GAAkB5E,GAG5C,SAASgG,EACdpB,EAMAkB,GAEAD,EAAmBlB,EAAaC,GAAkBkB,GCzLrC,SAASG,EACtBC,EACAtB,EAMAuB,GACC,IAAD,EACwDC,mBAEtD,MAHF,mBACOC,EADP,KAC6BC,EAD7B,KAKMC,EAAcC,uBAAY,SAACC,GAC/BH,EAAwBG,EAAMC,WAC7B,IAEGC,EAAYH,uBAAY,WAC5BF,EAAwB,QACvB,IAEGM,EAAcJ,uBAClB,SAACC,GACC,GAA6B,OAAzBJ,GAAiCF,GAAeA,EAAYU,QAAS,CACvE,IAAMC,EAAWT,EAAuBI,EAAMC,QAMxC1G,EAJgB4E,EAAgBC,SAAS/D,KAC7C8D,EAAgBnB,QAChBmB,EAAgBpB,YAGCsD,EAAWX,EAAYU,QAAQE,aAElDpB,EAAkBf,EAAiB5E,GACnCsG,EAAwBG,EAAMC,YAGlC,CAACL,EAAsBzB,EAAiBuB,IAG1Ca,qBAAU,WACR,GAAId,GAAkBC,GAAeA,EAAYU,QAAS,CACxD,IAAMI,EAAMd,EAAYU,QAOxB,OALAI,EAAIC,iBAAiB,YAAaX,GAClCU,EAAIC,iBAAiB,YAAaN,GAClCK,EAAIC,iBAAiB,UAAWP,GAChCM,EAAIC,iBAAiB,aAAcP,GAE5B,WACLM,EAAIE,oBAAoB,YAAaZ,GACrCU,EAAIE,oBAAoB,YAAaP,GACrCK,EAAIE,oBAAoB,UAAWR,GACnCM,EAAIE,oBAAoB,aAAcR,OAGzC,CAACT,EAAgBC,EAAaI,EAAaK,EAAaD,I,w8BCtDvDS,EAAKC,IAAWC,KAAKC,KAErBC,EAAiB,WACrB,IAAMC,EAAeC,qBAAkBpI,GACjCsF,EAAkB8C,qBAKd7I,GAP8D,EAQlCuH,qBARkC,mBAQjEuB,EARiE,KAQpDC,EARoD,KAUlEhB,EAAcJ,uBAClB,SAACC,GACC,IACG7B,IACAA,EAAgBuB,cAChBvB,EAAgBuB,YAAYU,QAE7B,OAAO,KANY,IASbrD,EAAiCoB,EAAjCpB,UAAWC,EAAsBmB,EAAtBnB,QAASoB,EAAaD,EAAbC,SACtBgD,EAAiBjD,EAAgBuB,YAAYU,QAAQiB,wBAErDhB,EAAWL,EAAMC,QAAUmB,EAAeE,KAG1C/H,EADgB6E,EAAS/D,KAAK2C,EAASD,IACXsD,EAAWe,EAAeG,OAE5DJ,EAAe/C,EAAS9D,IAAIyC,EAAWxD,MAEzC,CAAC4E,IAmBH,GAhBAoC,qBAAU,WACR,GACEpC,GACAA,EAAgBuB,aAChBvB,EAAgBuB,YAAYU,QAC5B,CACA,IAAMI,EAAMrC,EAAgBuB,YAAYU,QAIxC,OAFAI,EAAIC,iBAAiB,YAAaN,GAE3B,WACLK,EAAIE,oBAAoB,YAAaP,OAGxC,CAAChC,EAAiBgC,KAEhBhC,EACH,OAAO,KAlD+D,IAqDhEpB,EAAiCoB,EAAjCpB,UAAWC,EAAsBmB,EAAtBnB,QAASoB,EAAaD,EAAbC,SACtBoD,EAAmBpD,EAAS/D,KAAK2C,EAASD,GAI1C0E,GAHsBP,EACxB9C,EAAS/D,KAAK6G,EAAanE,GAC3B,GACsCyE,EAAoB,IAE9D,OACE,yBACEE,UAAWf,EAAG,kBACdgB,MAAO,CACLL,KAAMG,EAAa,IACnBG,MAAOZ,EAAavI,aACpBoJ,YAAab,EAAarI,gBAG5B,6BAAMuI,GAAe9C,EAAStC,OAAOoF,MAK5BH,I,6LC3Ef,IAAMe,EAAa,SACjBC,GAEA,IAAM5D,EAAkB8C,qBAKd7I,GAEV,OAAO2J,EAAMC,UAAS,SAACzI,GACjB4E,GACFe,EAAkBf,EAAiB5E,OAK1BuI,I,qLCjBf,IAAMG,EAAc,SAClBF,GAEA,IAAM5D,EAAkB8C,qBAKd7I,GAEV,OAAO2J,EAAMC,UAAS,SAAC3C,GACjBlB,GACFiB,EAAmBjB,EAAiBkB,OAK3B4C,I,2OClBTtB,EAAKC,IAAWC,KAAKC,KAErBoB,EAAW,WACf,IAAMlB,EAAeC,qBAAkBpI,GACjCsF,EAAkB8C,qBAKd7I,GAEJ+J,EAAW,SAACC,EAAoBC,GACpC,OAAmB,IAAfD,EACKC,EACHrB,EAAatI,eACbsI,EAAavI,aACO,IAAf2J,EACFC,EACHrB,EAAarI,cACbqI,EAAatI,eAEVsI,EAAarI,eAIxB,OACE,yBAAK+I,UAAWf,EAAG,aAChBxC,GACCA,EAAgBmE,WAAWC,SAAQ,SAACC,EAAOJ,GACzC,OAAOI,EAAMC,MAAMC,KAAI,SAAC/E,EAAMgF,GAC5B,OACEhF,EAAKsB,OAAS,GACdtB,EAAKsB,QAAU,KACb,yBACE2D,IAAG,kBAAaR,EAAb,YAA2BO,GAC9BjB,UAAWf,EAAG,WACdgB,MAAO,CACLL,KAAM3D,EAAKsB,OAAS,IACpB4C,YAAaM,EACXC,EACAjE,EAAgBC,SAASV,gBAAgBC,eAYhDuE,K,mOCnDTvB,GAAKC,IAAWC,KAAKC,MAMrB+B,GAAa,SACjBd,GAEA,IAAMf,EAAeC,qBAAkBpI,GACjCsF,EAAkB8C,qBAKd7I,GAEJ+J,EAAW,SAACW,EAAmBT,GACnC,OAAkB,IAAdS,EACKT,EACHrB,EAAatI,eACbsI,EAAavI,aACM,IAAdqK,EACFT,EACHrB,EAAarI,cACbqI,EAAatI,eAEVsI,EAAarI,eAIxB,OACE,yBAAK+I,UAAWf,GAAG,eACjB,kBAAC,GAAD,MACCxC,GACCA,EAAgBmE,WAAWI,KAAI,SAACI,EAAWC,GAAZ,OAC7B,yBACEH,IAAG,oBAAeG,GAClBrB,UAAWf,GACU,IAAnBoC,EACI,oBACA,sBAHO,oBAIEA,KAGdD,EAAUL,MAAMC,KAAI,SAAC/E,EAAMgF,GAC1B,IAAIrB,EAAO3D,EAAKsB,OACZsC,EAAQ5D,EAAKqF,KAajB,OAXID,EAAiB,IACfpF,EAAKsB,OAAS,IAChBqC,EAAO,EACPC,GAAgB5D,EAAKsB,QAGnBtB,EAAKsB,OAAStB,EAAKqF,KAAO,MAC5BzB,GAAiB5D,EAAKsB,OAAStB,EAAKqF,KAAO,MAK7C,yBACEJ,IAAG,mBAAcG,EAAd,YAAgCJ,GACnCjB,UAAWf,GACToB,EAAML,UACN,YAFW,oBAGE/D,EAAKJ,MAHP,YAGgBI,EAAKnD,MAChC2D,EAAgBC,SAASV,gBAAgBC,GACrC,qBACA,IAENgE,MAAO,CACLL,KAAMA,EAAO,IACbC,MAAOA,EAAQ,IACfK,MAAOO,EACLY,EACA5E,EAAgBC,SAASV,gBAAgBC,MAI7C,6BACGQ,EAAgBC,SAAStC,OACxB6B,EAAK1E,KACL0E,EAAKnD,KACc,IAAnBuI,cAYPF,M,0RCrFTI,GAAc,SAClBlB,GAEAd,qBAKU7I,GANP,IAQK8K,EAAuCnB,EAAvCmB,YAAaC,EAA0BpB,EAA1BoB,WAAYzB,EAAcK,EAAdL,UAQ3B0B,EAAS/K,IAAMgL,YACfC,EAAoB,GAEpBC,EAAsBxD,uBAAY,SAACS,GACvC,IAgBgBgD,EAhBVC,EACJjD,EAAIiD,aAAarD,SACjBI,EAAIiD,aAAarD,QAAQiB,wBACrBqC,EACJlD,EAAIkD,WAAWtD,SAAWI,EAAIkD,WAAWtD,QAAQiB,wBAC7CsC,EACJnD,EAAImD,aAAavD,SACjBI,EAAImD,aAAavD,QAAQiB,wBAErBuC,EAAS,SAACJ,GAAD,OACbvI,KAAK4I,IACHJ,EAAeD,EAAaC,GAAgBK,OAAOC,kBACnDL,EAAaF,EAAaE,GAAcI,OAAOC,kBAC/CJ,EAAeH,EAAaG,GAAgBG,OAAOC,oBAUvD,MAAO,CACLzC,MARckC,EAQD,SAAAQ,GAAC,OAAIA,EAAE1C,MAPpBrG,KAAKC,IACHuI,EAAeD,EAAaC,GAAgBK,OAAOG,kBACnDP,EAAaF,EAAaE,GAAcI,OAAOG,kBAC/CN,EAAeH,EAAaG,GAAgBG,OAAOG,oBAKrDC,MAAON,GAAO,SAAAI,GAAC,OAAIA,EAAEE,SACrB3C,MAAOqC,GAAO,SAAAI,GAAC,OAAIA,EAAEzC,SACrB4C,OAAQP,GAAO,SAAAI,GAAC,OAAIA,EAAEG,aAEvB,IA6EH,OA3EA5D,qBAAU,WACR,IAAM6D,EAAwB,CAAC,IACzBC,EAAc,CAAC,GACfC,EAA4C,GAE5CC,EAAmB,SACvBC,EACAC,GAEA,OAAQD,EAAYE,MAClB,SAAAC,GAAa,OACVF,EAAenD,MAAQqD,EAAcrD,MACpCmD,EAAeP,OAASS,EAAcT,OACvCS,EAAcrD,MAAQmD,EAAenD,MACpCqD,EAAcT,OAASO,EAAeP,OACvCO,EAAenD,MAAQqD,EAAcrD,MACpCmD,EAAenD,MAAQqD,EAAcT,OACtCS,EAAcrD,MAAQmD,EAAenD,MACpCqD,EAAcrD,MAAQmD,EAAeP,OACtCO,EAAeP,OAASS,EAAcrD,MACrCmD,EAAeP,OAASS,EAAcT,OACvCS,EAAcT,OAASO,EAAenD,MACrCqD,EAAcT,OAASO,EAAeP,UAI9CZ,EAAKsB,SAAQ,SAACpE,EAAKqE,GAIjB,IAHA,IAAMJ,EAAiBlB,EAAoB/C,GACvCsE,GAAY,EAGVC,EAAmB,EACvBA,EAAmBX,EAAMY,OACzBD,IAEA,GAAIR,EAAiBH,EAAMW,GAAmBN,GAAiB,CAC7DK,GAAY,EACZV,EAAMW,GAAkBzH,KAAKmH,GAC7BJ,EAAYU,GAAoB9J,KAAK4I,IACnCQ,EAAYU,IAAqB,EACjCN,EAAeN,QAEjBG,EAAeO,GAAYE,EAC3B,MAICD,IACHV,EAAM9G,KAAK,CAACmH,IACZJ,EAAYD,EAAMY,OAAS,GAAKP,EAAeN,OAC/CG,EAAeO,GAAYT,EAAMY,OAAS,MAI9C1B,EAAKsB,SAAQ,SAACpE,EAAKqE,GACbrE,EAAIiD,aAAarD,UACnBI,EAAIiD,aAAarD,QAAQuB,MAAMsD,IAC7B,GAAKX,EAAeO,GACpBR,EAAYa,QAAO,SAACC,EAAKhB,EAAQiB,GAC/B,OAAOD,GAAOC,EAAQd,EAAeO,GAAYV,EAAS,KACzD,GACH,SAIFf,GAAUA,EAAOhD,UAAY8C,IAAgBC,IAC/CC,EAAOhD,QAAQuB,MAAMwC,OACnB,IAAMC,EAAMY,OAAS,GACrBX,EAAYa,QAAO,SAACC,EAAKhB,GACvB,OAAOgB,EAAMhB,IACZ,GACH,SAKJ,yBACEzC,UAAWd,KACTE,KAAOuE,YACPlC,EAAarC,KAAOwE,sBAAwB,KAC5C5D,GAEFlB,IAAK4C,GAEJ/K,IAAMkN,SAAS7C,IAAIX,EAAMyD,UAAU,SAAAC,GAClC,GAAIpN,IAAMqN,eAAeD,GAAQ,CAC/B,IAAME,EAAW,CACflC,aAAcpL,IAAMgL,YACpBK,WAAYrL,IAAMgL,YAClBM,aAActL,IAAMgL,aAItB,OADAC,EAAKhG,KAAKqI,GACHtN,IAAMuN,aAAaH,EAAO,CAAEE,WAAUxC,qBAOxCF,M,qOCtHA5K,OAAMwN,MAjDI,SAAC9D,GAA+B,IAC/C4D,EAAqC5D,EAArC4D,SAAUG,EAA2B/D,EAA3B+D,MAAOC,EAAoBhE,EAApBgE,SAAUnE,EAAUG,EAAVH,MAE7BoE,EACS,aAAbD,GACMhE,EAAMkE,cAAgBlE,EAAMmE,eAAkB,IAChD,EAyBN,OAvBA3F,qBAAU,WACR,GACEoF,GACAA,EAAShC,aAAavD,SACtBuF,EAASjC,WAAWtD,SACP,aAAb2F,EACA,CACA,IAAMI,EAAaR,EAAShC,aAAavD,QAAQE,YAC3C8F,EAAWT,EAASjC,WAAWtD,QAAQE,YAE7C,GAAI6F,EAAaC,EACfT,EAAShC,aAAavD,QAAQuB,MAAM0E,WAAa,SAC5C,CACL,IAAMhM,EAAO8L,GAAe,IAAMH,GAAmB,IAAOI,EAExD/L,EAAO,IACTsL,EAAShC,aAAavD,QAAQuB,MAAM0E,WAClCL,EAAmB3L,EAAO+L,EAAY,IAAM,UAOpD,yBAAK1E,UAAWZ,KAAOwF,YACrB,yBACE5E,UAAWZ,KAAOyF,gBAClB/F,IAAKmF,EAAWA,EAAShC,aAAe,KACxChC,MAAO,CAAE0E,WAAYL,EAAkB,IAAKpE,UAE3CkE,GAEH,yBACEpE,UAAWZ,KAAO0F,cAClBhG,IAAKmF,EAAWA,EAASjC,WAAa,KACtC/B,MAAO,CAAEnJ,gBAAiBoJ,SCvC5BjB,GAAKC,IAAWC,KAAKC,M,miBAmC3B,IAkGezI,OAAMwN,MAlGE,SACrB9D,GAEA,IAAMf,EAAeC,qBAAkBpI,GACjCsF,EAAkB8C,qBAKd7I,GAEV,IAAK+F,EACH,OAAO,KAVN,IAcDpB,EAQEgF,EARFhF,UACAC,EAOE+E,EAPF/E,QACA8I,EAME/D,EANF+D,MACApE,EAKEK,EALFL,UACAE,EAIEG,EAJFH,MACA6E,EAGE1E,EAHF0E,UACAd,EAEE5D,EAFF4D,SACAxC,EACEpB,EADFoB,WAGWuD,EAGTvI,EAHFpB,UACS4J,EAEPxI,EAFFnB,QACAoB,EACED,EADFC,SAGIwI,EAAkBxI,EAASrF,MAAMgE,GACjC8J,EAAgBzI,EAASrF,MAAMiE,GAErC,IAAKoB,EAASnE,SAAS2M,EAAiBC,GAEtC,OADAC,QAAQC,MAAM,2DACP,KAGT,IAAMvF,EAAmBpD,EAAS/D,KAAKsM,EAAiBD,GAClDM,EAAwB5I,EAAS/D,KACrCuM,EACAF,GAIIjF,EAAcuF,EAAwBxF,EAAoB,IAC1DD,GAHsBnD,EAAS/D,KAAKwM,EAAeH,GAI/BM,GAAyBxF,EAAoB,IAEvE,IAAKmE,EACH,OAAO,KAGT,IAAMsB,EACJxF,EAAa,GAAKA,EAAaF,EAAQ,EACnC,WACAE,GAAc,GAAKA,EAAaF,GAAS,IACzC,SACAE,EAAa,KAAOA,EAAaF,EAAQ,IACzC,WACAE,EAAa,GAAKA,EAAaF,EAAQ,IACvC,UACA,UAEF2F,EAA6DC,GAE7DV,IACFS,EAAgBT,GAGlB,IAAMW,EAAmC,CACvC9F,KAAMG,EAAa,IACnBF,MAAOA,EAAQ,KAOjB,OAJI4B,IACFiE,EAAYjD,OAAS,QAIrB,yBACE3D,IAAKmF,EAASlC,aACd/B,UAAWf,GAAG,SAAUe,GACxBC,MAAOyF,GAEP,kBAACF,EAAD,CACEpB,MAAOA,EACPH,SAAUA,EACVI,SAAUkB,EACVhB,cAAexE,EACfyE,eAAgB3E,EAChBK,MAAOA,GAASZ,EAAapI,iB,iDC5GtBP,OAAMwN,MAvBG,SAAC9D,GAA+B,IAC9C4D,EAA2B5D,EAA3B4D,SAAUG,EAAiB/D,EAAjB+D,MAAOlE,EAAUG,EAAVH,MAEzB,OACE,yBAAKF,UAAWZ,KAAOwF,YACrB,yBAAK5E,UAAWZ,KAAOuG,0BACrB,yBACE3F,UAAWZ,KAAOyF,gBAClB5E,MAAO,CAAEC,SACTpB,IAAKmF,EAAWA,EAAShC,aAAe,MAEvCmC,IAGL,yBACEpE,UAAWZ,KAAO0F,cAClB7E,MAAO,CAAEnJ,gBAAiBoJ,GAC1BpB,IAAKmF,EAAWA,EAASjC,WAAa,WCqC/BrL,OAAMwN,MA1CC,SACpB9D,GAEA,IAAMf,EAAeC,qBAAkBpI,GACjCsF,EAAkB8C,qBAKd7I,GAEF0N,EAAuD/D,EAAvD+D,MAAO7M,EAAgD8I,EAAhD9I,KAAMyI,EAA0CK,EAA1CL,UAAWE,EAA+BG,EAA/BH,MAAO6E,EAAwB1E,EAAxB0E,UAAWd,EAAa5D,EAAb4D,SAElD,IAAKxH,EACH,OAAO,KAGT,IAAMmJ,EAAanJ,EAAgBC,SAASrF,MAAME,GAC5C+D,EAAUmB,EAAgBC,SAAS9D,IACvCgN,EACAnJ,EAAgBC,SAASpE,sBAGvBkN,EAA6DK,GAMjE,OAJId,IACFS,EAAgBT,GAIhB,kBAACe,GAAD,CACE1B,MAAOA,EACPpE,UAAWA,EACX3E,UAAW9D,EACX+D,QAASA,EACTyJ,UAAWS,EACXvB,SAAUA,EACV/D,MAAOA,GAASZ,EAAapI,gBCxB7B+H,GAAKC,IAAWC,KAAKC,MAiBrB2G,GAAW,SACf1F,GAGI,IAEF3D,EAaE2D,EAbF3D,SACArB,EAYEgF,EAZFhF,UACAC,EAWE+E,EAXF/E,QACA0K,EAUE3F,EAVF2F,aACAhG,EASEK,EATFL,UACAnD,EAQEwD,EARFxD,QACAE,EAOEsD,EAPFtD,QACAC,EAMEqD,EANFrD,YACAC,EAKEoD,EALFpD,YACAgJ,EAIE5F,EAJF4F,aACAC,EAGE7F,EAHF6F,MACApC,EAEEzD,EAFFyD,SACGqC,EAdF,YAeC9F,EAfD,iJAiBG0B,EAAepL,IAAMgL,YAjBxB,EAkByC1D,mBAAS,GAlBlD,mBAkBIuG,EAlBJ,KAkBoB4B,EAlBpB,OAoB2CnI,mBAC5CvB,EAASrF,MAAMgE,IArBd,mBAoBI6J,EApBJ,KAoBqBmB,EApBrB,OAuBuCpI,mBAASvB,EAASrF,MAAMiE,IAvB/D,mBAuBI6J,EAvBJ,KAuBmBmB,EAvBnB,KAwBGC,EAAqBC,iBAAO,CAAEnL,YAAWC,YAEzCmL,EAAwBpI,uBAAY,WACxC,IAAMvF,GAA8C,IAAvC4N,OAAOV,GAAc/K,QAAQ,KAAc,IAAM,KACxD0L,EAAQC,WAAWZ,GAMzB,OAJIW,GAAS,GACXvB,QAAQC,MAAM,+CAGT,CACLsB,MAAOpN,KAAK4I,IAAI,EAAGwE,GACnB7N,UAED,CAACkN,IAEEa,EAAuBxI,uBAC3B,SACE0C,EACA1F,EACAxD,GAEA,IAAIiP,EAA4B,KAEhC,OAAO/F,EAAMgG,aACX,SAACtD,EAAKxH,GACJ,IAAMsB,EAAUb,EAAS/D,KAAKsD,EAAK1E,KAAM8D,GAAaxD,EAAY,IAC5DyJ,EAAsB,OAAfwF,EAAsBA,EAAavJ,EAAS,KAIzD,OAFAuJ,EAAavJ,EAEG,OAAT+D,EAAA,gBAAsBrF,EAAtB,CAA4BsB,SAAQ+D,UAApC,mBAA+CmC,IAAOA,IAE/D,MAGJ,CAAC/G,IAGGsK,EAAoB3I,uBACxB,SAAChD,EAAuBC,GACtB,IAAMzD,EAAW6E,EAAS/D,KAAK2C,EAASD,GAElC4L,EAAqBR,IACrBS,EACwB,MAA5BD,EAAmBnO,KACf,IAAMmO,EAAmBN,MACzBnC,EAAiByC,EAAmBN,MAEpCQ,EAAkBtP,EAAWqP,EATW,EAc1CxK,EAASP,WAAWiL,QAAO,SAAAC,GAC7B,OAAOF,EAAkBE,EAAUxP,YAfS,iBAY5CyP,EAZ4C,KAazCC,EAbyC,WAkBxClL,EAAYiL,GAEd5K,EAASP,WAAWO,EAASP,WAAWmH,OAAS,GAC/CkE,EAAkBD,EAAsBH,QAAO,SAAAC,GAAS,OAC5DA,EAAUjL,aAAaC,MAGzB,MAAO,CAACA,GAAD,mBAAemL,IAAiBxG,KAAI,SAAAF,GACzC,MAAO,CACLC,MAAO8F,EACL/F,EAAM3F,SAASE,EAAWC,GAC1BD,EACAxD,SAKR,CAAC6E,EAAUmK,EAAsBrC,EAAgBiC,IAG7CgB,EAAWpJ,uBAAY,SAACwB,GAC5BuG,EAAkBvG,KACjB,IAEHhB,qBAAU,WACJxD,IAAckL,EAAmB7H,QAAQrD,WAC3CgL,EAAmB3J,EAASrF,MAAMgE,IAGhCC,IAAYiL,EAAmB7H,QAAQpD,SACzCgL,EAAiB5J,EAASrF,MAAMiE,MAEjC,CAACoB,EAAUrB,EAAWC,IAEzBuD,qBAAU,WACR0H,EAAmB7H,QAAU,CAAErD,YAAWC,cAG5C,IAAMoM,EAAgB7K,EAAUH,EAASrF,MAAMwF,QAAWC,EACpD6K,EAAgB5K,EAAUL,EAASrF,MAAM0F,QAAWD,EAEpD8K,EAAoB5K,EACtBN,EAAS9E,cAAcoF,QACvBF,EACE+K,EAAoB5K,EACtBP,EAAS9E,cAAcqF,QACvBH,EAEE8D,EAAaoG,EAAkB9B,EAAiBC,GAEhD1I,EAKF,CACFC,WACAkE,aACAvF,UAAW6J,EACX5J,QAAS6J,EACTxI,aAAc0J,EACdzJ,WAAY0J,EACZtI,YAAa+D,EACblF,QAAS6K,EACT3K,QAAS4K,EACT3K,YAAa4K,EACb3K,YAAa4K,GAKf,GAFAC,EAAgB7B,EAAcxJ,EAAiBsF,IAE1CrF,EAASnE,SAAS2M,EAAiBC,GAEtC,OADAC,QAAQC,MAAM,4CACP,KAGT,GAAIqC,GAAiBhL,EAASnE,SAAS2M,EAAiBwC,GAEtD,OADAtC,QAAQC,MAAM,2CACP,KAGT,GAAIsC,GAAiBjL,EAASnE,SAASoP,EAAexC,GAEpD,OADAC,QAAQC,MAAM,0CACP,KAGT,GACEuC,GACAC,GACAD,EAAoBC,EAGpB,OADAzC,QAAQC,MAAM,kDACP,KAGT,GAAIuC,GAAqBA,EAAoBlL,EAASpE,qBAIpD,OAHA8M,QAAQC,MACN,gEAEK,KAGT,IAAMvF,EAAmBpD,EAAS/D,KAAKwM,EAAeD,GAEtD,OAAI0C,GAAqBA,EAAoB9H,GAC3CsF,QAAQC,MAAM,wDACP,MAGLwC,GAAqBA,EAAoB/H,GAC3CsF,QAAQC,MAAM,wDACP,MAIP,kBAAClO,EAAa4Q,SAAd,CAAuBpB,MAAOT,GAC5B,uCACElG,UAAWf,GAAG,WAAYe,GAC1BC,MAAO,CAAEnJ,gBAAiBoP,EAAMpP,iBAChCgI,IAAKiD,GACDoE,GAEJ,kBAAC,IAAD,CAAqB6B,aAAW,EAACP,SAAUA,IAC3C,kBAAC/Q,EAAgBqR,SAAjB,CAA0BpB,MAAOlK,GAC9BqH,MAOXiC,GAASkC,aAAe,CACtBjC,aAAc,OACdC,cAAc,EACdvJ,SAAUwL,IACVhC,MAAOrP,GAGTkP,GAASvF,SAAWA,GACpBuF,GAAS1G,eAAiBA,EAC1B0G,GAAS5E,WAAaA,GAEtB4E,GAAS3F,WAAaA,EACtB2F,GAASxF,YAAcA,EAEvBwF,GAASoC,IAAM5G,GACfwE,GAASD,OAASA,GAClBC,GAASqC,MAAQA,GAEFrC,U,yKCrRf,IAAMsC,GAAe,CACnBC,IAAK1K,EACLD,KAAME,G,ymCCAR,IAKM0K,GAAc,GAIL,SAASC,GAAT,GAGX,IAFFC,EAEC,EAFDA,WACGpI,EACF,8BACD,OAAO,YALS,UAKT,iBAAekI,GAAiBlI,EAAhC,CAAuCoI,WAAYA,EAAYC,QAAQ,cAE5E,iBAAQ,CACN,GAAM,eADR,eAGA,oDACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4bAA2cC,QAAS,CACrfxI,MAAOyI,KAAOA,KAAKzI,MAAQA,EAC3B0I,eACAhD,aACCiD,cAAa,ml2BAAsl2BN,QAAQ,cAChn2B,YAAC,GAAD,CAAUrN,UAAW,aAAcC,QAAS,aAAc4K,MAAO,CAC3DpP,gBAAiB,UACjBC,aAAc,OACdC,eAAgB,OAChBC,cAAe,OACfC,WAAY,WACXwR,QAAQ,YACb,YAAC,GAASlI,SAAV,MACA,YAAC,GAAS2H,IAAV,KACE,YAAC,GAASC,MAAV,CAAgB7Q,KAAK,aAAa6M,MAAM,UAE1C,YAAC,GAAS+D,IAAV,CAAc3G,aAAW,GACvB,YAAC,GAASL,WAAV,U,uKAQNqH,GAAWS,gBAAiB","file":"static/js/src-test.2cd3ef42.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelAbove\":\"Event_labelAbove__1rLwU\",\"labelAboveLabel\":\"Event_labelAboveLabel__13O8q\",\"labelAboveLabelContainer\":\"Event_labelAboveLabelContainer__204G4\",\"labelAboveBar\":\"Event_labelAboveBar__2R-_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"period\":\"Period_period__T-lyN\",\"labelAbove\":\"Period_labelAbove__16yrH\",\"labelAboveLabel\":\"Period_labelAboveLabel__3-hby\",\"labelAboveBar\":\"Period_labelAboveBar__2uorT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepBars\":\"StepBars_stepBars__1N3m8\",\"stepBar\":\"StepBars_stepBar__3mQdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepLabels\":\"StepLabels_stepLabels__1dT44\",\"stepLabelsPrimary\":\"StepLabels_stepLabelsPrimary__3XwB0\",\"stepLabelsSecondary\":\"StepLabels_stepLabelsSecondary__5gLjG\",\"stepLabel\":\"StepLabels_stepLabel__1nICd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeline\":\"Timeline_timeline__39ft9\",\"timelineRow\":\"Timeline_timelineRow__3xICy\",\"timelineRowFullHeight\":\"Timeline_timelineRowFullHeight__17VdW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentDateBar\":\"CurrentDateBar_currentDateBar__2kmRa\"};","import React from 'react';\n\nexport interface CalendarStep<ParsedDate, Units> {\n  date: ParsedDate;\n  unit: Units;\n  scale: number;\n}\n\nexport interface DisplayStep<ParsedDate, Units>\n  extends CalendarStep<ParsedDate, Units> {\n  offset: number;\n  size: number;\n}\n\nexport interface CalendarZoomLevel<ParsedDate, Units> {\n  unit: Units;\n  duration: number;\n  isMajorLevel: (mainLevel: CalendarZoomLevel<ParsedDate, Units>) => boolean;\n  getSteps: (\n    startDate: ParsedDate,\n    endDate: ParsedDate\n  ) => CalendarStep<ParsedDate, Units>[];\n}\n\nexport interface DisplayZoomLevel<ParsedDate, Units> {\n  steps: DisplayStep<ParsedDate, Units>[];\n}\n\nexport interface Calendar<InputDate, ParsedDate, InputDuration, Units> {\n  parse: (date: InputDate) => ParsedDate;\n  unparse: (date: ParsedDate) => InputDate;\n  parseDuration: (duration: InputDuration) => number;\n  getMinimumDuration: () => number;\n  isBefore: (dateA: ParsedDate, dateB: ParsedDate) => boolean;\n  diff: (dateA: ParsedDate, dateB: ParsedDate) => number;\n  add: (date: ParsedDate, amount: number, unit?: Units) => ParsedDate;\n  subtract: (date: ParsedDate, amount: number, unit?: Units) => ParsedDate;\n  format: (date: ParsedDate, unit?: Units, onlyUnit?: boolean) => string;\n  isImportantStep: (step: CalendarStep<ParsedDate, Units>) => boolean;\n  zoomLevels: CalendarZoomLevel<ParsedDate, Units>[];\n}\n\nexport interface TimelineContextContent<\n  InputDate,\n  ParsedDate,\n  InputDuration,\n  Units\n> {\n  calendar: Calendar<InputDate, ParsedDate, InputDuration, Units>;\n  stepLevels: DisplayZoomLevel<ParsedDate, Units>[];\n  startDate: ParsedDate;\n  endDate: ParsedDate;\n  setStartDate: (date: ParsedDate) => void;\n  setEndDate: (date: ParsedDate) => void;\n  timelineRef: React.RefObject<HTMLDivElement>;\n  minDate?: ParsedDate;\n  maxDate?: ParsedDate;\n  minDuration?: number;\n  maxDuration?: number;\n}\n\nexport const TimelineContext = React.createContext<TimelineContextContent<\n  any,\n  any,\n  any,\n  any\n> | null>(null);\n","import React from 'react';\n\nexport interface Theme {\n  backgroundColor: string;\n  primaryColor: string;\n  secondaryColor: string;\n  tertiaryColor: string;\n  eventColor: string;\n}\n\nexport const defaultTheme: Theme = {\n  backgroundColor: '#323232',\n  primaryColor: '#AAA',\n  secondaryColor: '#AA0',\n  tertiaryColor: '#A50',\n  eventColor: '#81996A',\n};\n\nexport const ThemeContext = React.createContext<Theme>(defaultTheme);\n","export type Units =\n  | 'millisecond'\n  | 'second'\n  | 'minute'\n  | 'hour'\n  | 'day'\n  | 'month'\n  | 'year';\n\nexport type InputDate = string;\nexport type ParsedDate = Date;\n\ntype InputDuration = {\n  [U in Units]?: number;\n};\n\ninterface Step {\n  date: ParsedDate;\n  unit: Units;\n  scale: number;\n}\n\ninterface ZoomLevel {\n  unit: Units;\n  duration: number;\n  isMajorLevel: (mainLevel: ZoomLevel) => boolean;\n  getSteps: (startDate: ParsedDate, endDate: ParsedDate) => Step[];\n}\n\nconst SECOND_IN_MILLISECONDS = 1000;\nconst MINUTE_IN_MILLISECONDS = 60 * SECOND_IN_MILLISECONDS;\nconst HOUR_IN_MILLISECONDS = 60 * MINUTE_IN_MILLISECONDS;\nconst DAY_IN_MILLISECONDS = 24 * HOUR_IN_MILLISECONDS;\nconst MONTH_IN_MILLISECONDS = 30 * DAY_IN_MILLISECONDS;\nconst YEAR_IN_MILLISECONDS = 12 * MONTH_IN_MILLISECONDS;\n\nconst units = [\n  'millisecond',\n  'second',\n  'minute',\n  'hour',\n  'day',\n  'month',\n  'year',\n];\n\nfunction parse(minUnit: Units): (date: InputDate) => ParsedDate {\n  return date => startOf(new Date(date), minUnit);\n}\n\nfunction unparse(date: ParsedDate): InputDate {\n  return date.toISOString();\n}\n\nfunction parseDuration(duration: InputDuration): number {\n  let milliseconds = 0;\n\n  milliseconds += duration.millisecond ? duration.millisecond : 0;\n  milliseconds += duration.second\n    ? duration.second * SECOND_IN_MILLISECONDS\n    : 0;\n  milliseconds += duration.minute\n    ? duration.minute * MINUTE_IN_MILLISECONDS\n    : 0;\n  milliseconds += duration.hour ? duration.hour * HOUR_IN_MILLISECONDS : 0;\n  milliseconds += duration.day ? duration.day * DAY_IN_MILLISECONDS : 0;\n  milliseconds += duration.month ? duration.month * MONTH_IN_MILLISECONDS : 0;\n  milliseconds += duration.year ? duration.year * YEAR_IN_MILLISECONDS : 0;\n\n  return milliseconds;\n}\n\nfunction getMinimumDuration(minUnit: Units): () => number {\n  return () => {\n    switch (minUnit) {\n      case 'second':\n        return SECOND_IN_MILLISECONDS;\n      case 'minute':\n        return MINUTE_IN_MILLISECONDS;\n      case 'hour':\n        return HOUR_IN_MILLISECONDS;\n      case 'day':\n        return DAY_IN_MILLISECONDS;\n      case 'month':\n        return MONTH_IN_MILLISECONDS;\n      case 'year':\n        return YEAR_IN_MILLISECONDS;\n      default:\n        return 1;\n    }\n  };\n}\n\nfunction isBefore(dateA: ParsedDate, dateB: ParsedDate): boolean {\n  return dateA.getTime() < dateB.getTime();\n}\n\nfunction diff(dateA: ParsedDate, dateB: ParsedDate): number {\n  return dateA.getTime() - dateB.getTime();\n}\n\nfunction add(\n  date: ParsedDate,\n  amount: number,\n  unit: Units = 'millisecond'\n): ParsedDate {\n  let newDate = new Date(date.getTime());\n\n  switch (unit) {\n    case 'millisecond':\n      return new Date(date.getTime() + amount);\n    case 'second':\n      return add(date, amount * SECOND_IN_MILLISECONDS, 'millisecond');\n    case 'minute':\n      return add(date, amount * MINUTE_IN_MILLISECONDS, 'millisecond');\n    case 'hour':\n      return add(date, amount * HOUR_IN_MILLISECONDS, 'millisecond');\n    case 'day':\n      newDate.setDate(date.getDate() + amount);\n      return newDate;\n    case 'month':\n      const desiredMonth = date.getMonth() + amount;\n      const lastDayOfMonth = new Date(date.getFullYear(), desiredMonth + 1, 0);\n\n      newDate.setMonth(\n        desiredMonth,\n        Math.min(lastDayOfMonth.getDate(), date.getDate())\n      );\n      return newDate;\n    case 'year':\n      return add(date, amount * 12, 'month');\n    default:\n      return date;\n  }\n}\n\nfunction subtract(\n  date: ParsedDate,\n  amount: number,\n  unit: Units = 'millisecond'\n): ParsedDate {\n  return add(date, -amount, unit);\n}\n\nfunction startOf(date: ParsedDate, unit: Units): ParsedDate {\n  let newDate = new Date(date.getTime());\n\n  switch (unit) {\n    case 'second':\n      newDate.setMilliseconds(0);\n      return newDate;\n    case 'minute':\n      newDate.setSeconds(0, 0);\n      return newDate;\n    case 'hour':\n      newDate.setMinutes(0, 0, 0);\n      return newDate;\n    case 'day':\n      newDate.setHours(0, 0, 0, 0);\n      return newDate;\n    case 'month':\n      newDate.setDate(1);\n      newDate.setHours(0, 0, 0, 0);\n      return newDate;\n    case 'year':\n      newDate.setFullYear(date.getFullYear(), 0, 1);\n      newDate.setHours(0, 0, 0, 0);\n      return newDate;\n    default:\n      return newDate;\n  }\n}\n\nfunction get(date: ParsedDate, unit: Units): number {\n  switch (unit) {\n    case 'millisecond':\n      return date.getMilliseconds();\n    case 'second':\n      return date.getSeconds();\n    case 'minute':\n      return date.getMinutes();\n    case 'hour':\n      return date.getHours();\n    case 'day':\n      return date.getDate();\n    case 'month':\n      return date.getMonth();\n    case 'year':\n      return date.getFullYear();\n  }\n}\n\nfunction format(locale: string, minUnit: Units, maxUnit: Units) {\n  function internFormat(\n    date: ParsedDate,\n    unit?: Units,\n    onlyUnit: boolean = false\n  ): string {\n    const monthLabels: { [locale: string]: string[] } = {\n      en: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      fr: [\n        'janv.',\n        'févr.',\n        'mars',\n        'avr.',\n        'mai',\n        'juin',\n        'juil.',\n        'août',\n        'sept.',\n        'oct.',\n        'nov.',\n        'déc.',\n      ],\n    };\n\n    const padded = (u: number) => (u < 10 ? `0${u}` : `${u}`);\n    const paddedMs = (u: number) =>\n      u < 10 ? `00${u}` : u < 100 ? `0${u}` : `${u}`;\n\n    switch (unit) {\n      case 'millisecond':\n        return onlyUnit\n          ? `${date.getMilliseconds()}ms`\n          : `${internFormat(date, 'second')}.${paddedMs(\n              date.getMilliseconds()\n            )}`;\n      case 'second':\n        return onlyUnit\n          ? `${padded(date.getSeconds())}s`\n          : `${internFormat(date, 'minute')}:${padded(date.getSeconds())}`;\n      case 'minute':\n        return `${padded(date.getHours())}:${padded(date.getMinutes())}`;\n      case 'hour':\n        return onlyUnit\n          ? `${padded(date.getHours())}:00`\n          : `${padded(date.getHours())}h`;\n      case 'day':\n        return onlyUnit\n          ? `${padded(date.getDate())}`\n          : `${padded(date.getDate())} ${internFormat(date, 'month')}`;\n      case 'month':\n        const formattedMonth = monthLabels[locale][date.getMonth()];\n        return onlyUnit\n          ? `${formattedMonth}`\n          : `${formattedMonth} ${internFormat(date, 'year')}`;\n      case 'year':\n        return `${date.getFullYear()}`;\n      default:\n        const part1 =\n          units.indexOf(minUnit) > units.indexOf('day')\n            ? `${internFormat(date, minUnit)}`\n            : `${internFormat(date, 'day')}`;\n        const part2 =\n          units.indexOf(minUnit) < units.indexOf('day')\n            ? ` - ${internFormat(date, minUnit)}`\n            : '';\n\n        return `${part1}${part2}`;\n    }\n  }\n\n  return internFormat;\n}\n\nfunction getSteps(unit: Units, n: number) {\n  return (startDate: ParsedDate, endDate: ParsedDate) => {\n    const list = [];\n\n    let offsetUnits = get(startDate, unit);\n\n    if (unit === 'day') {\n      const correctedStartDate = subtract(\n        startDate,\n        n > 1 && get(startDate, unit) >= 30 ? n : 0,\n        unit\n      ); // Fix to hide days 30 and 31\n      const moduloDay = get(correctedStartDate, unit) < n ? 1 : 0; // Fix to round to 1st day of month\n      offsetUnits = get(correctedStartDate, unit) - moduloDay;\n    }\n\n    let date = subtract(startOf(startDate, unit), offsetUnits % n, unit);\n    let stop = false;\n\n    while (!stop) {\n      if (!isBefore(date, endDate)) {\n        stop = true; // We need to go an extra step after the end date to compute the last step size\n      }\n\n      list.push({ date, unit, scale: n });\n\n      let durationToAdd = n;\n      const previousMonth = unit === 'day' ? get(date, 'month') : null;\n\n      if (unit === 'day' && n > 1 && get(date, unit) === 1) {\n        durationToAdd = n - 1; // Fix due to the round of 1st day of month\n      }\n\n      date = add(date, durationToAdd, unit);\n\n      if (unit === 'day') {\n        date = add(date, n > 1 && get(date, unit) >= 30 ? 1 : 0, 'month'); // Fix to hide days 30 and 31\n\n        if (get(date, 'month') !== previousMonth) {\n          date = startOf(date, 'month');\n        }\n      }\n    }\n\n    return list;\n  };\n}\n\nfunction isImportantStep(step: Step) {\n  if (step.unit === 'year') {\n    return get(step.date, 'year') % (10 * step.scale) === 0;\n  }\n\n  return false;\n}\n\nfunction getZoomLevels(minUnit: Units, maxUnit: Units) {\n  const zoomLevels: ZoomLevel[] = [];\n\n  if (\n    units.indexOf(minUnit) <= units.indexOf('millisecond') &&\n    units.indexOf(maxUnit) >= units.indexOf('millisecond')\n  ) {\n    zoomLevels.push(\n      {\n        unit: 'millisecond',\n        duration: 1,\n        isMajorLevel: () => false,\n        getSteps: getSteps('millisecond', 1),\n      },\n      {\n        unit: 'millisecond',\n        duration: 100,\n        isMajorLevel: () => false,\n        getSteps: getSteps('millisecond', 100),\n      },\n      {\n        unit: 'millisecond',\n        duration: 500,\n        isMajorLevel: () => false,\n        getSteps: getSteps('millisecond', 500),\n      }\n    );\n  }\n\n  if (\n    units.indexOf(minUnit) <= units.indexOf('second') &&\n    units.indexOf(maxUnit) >= units.indexOf('second')\n  ) {\n    zoomLevels.push(\n      {\n        unit: 'second',\n        duration: 1 * SECOND_IN_MILLISECONDS,\n        isMajorLevel: mainLevel => mainLevel.unit === 'millisecond',\n        getSteps: getSteps('second', 1),\n      },\n      {\n        unit: 'second',\n        duration: 5 * SECOND_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('second', 5),\n      },\n      {\n        unit: 'second',\n        duration: 10 * SECOND_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('second', 10),\n      },\n      {\n        unit: 'second',\n        duration: 30 * SECOND_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('second', 30),\n      }\n    );\n  }\n\n  if (\n    units.indexOf(minUnit) <= units.indexOf('minute') &&\n    units.indexOf(maxUnit) >= units.indexOf('minute')\n  ) {\n    zoomLevels.push(\n      {\n        unit: 'minute',\n        duration: 1 * MINUTE_IN_MILLISECONDS,\n        isMajorLevel: mainLevel => mainLevel.unit === 'second',\n        getSteps: getSteps('minute', 1),\n      },\n      {\n        unit: 'minute',\n        duration: 5 * MINUTE_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('minute', 5),\n      },\n      {\n        unit: 'minute',\n        duration: 10 * MINUTE_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('minute', 10),\n      },\n      {\n        unit: 'minute',\n        duration: 30 * MINUTE_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('minute', 30),\n      }\n    );\n  }\n\n  if (\n    units.indexOf(minUnit) <= units.indexOf('hour') &&\n    units.indexOf(maxUnit) >= units.indexOf('hour')\n  ) {\n    zoomLevels.push(\n      {\n        unit: 'hour',\n        duration: 1 * HOUR_IN_MILLISECONDS,\n        isMajorLevel: mainLevel => mainLevel.unit === 'minute',\n        getSteps: getSteps('hour', 1),\n      },\n      {\n        unit: 'hour',\n        duration: 3 * HOUR_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('hour', 3),\n      },\n      {\n        unit: 'hour',\n        duration: 6 * HOUR_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('hour', 6),\n      }\n    );\n  }\n\n  if (\n    units.indexOf(minUnit) <= units.indexOf('day') &&\n    units.indexOf(maxUnit) >= units.indexOf('day')\n  ) {\n    zoomLevels.push(\n      {\n        unit: 'day',\n        duration: 1 * DAY_IN_MILLISECONDS,\n        isMajorLevel: mainLevel =>\n          ['hour', 'minute', 'second', 'millisecond'].includes(mainLevel.unit),\n        getSteps: getSteps('day', 1),\n      },\n      {\n        unit: 'day',\n        duration: 5 * DAY_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('day', 5),\n      },\n      {\n        unit: 'day',\n        duration: 10 * DAY_IN_MILLISECONDS,\n        isMajorLevel: () => false,\n        getSteps: getSteps('day', 10),\n      }\n    );\n  }\n\n  if (\n    units.indexOf(minUnit) <= units.indexOf('month') &&\n    units.indexOf(maxUnit) >= units.indexOf('month')\n  ) {\n    for (const i of [1, 2, 4, 6]) {\n      zoomLevels.push({\n        unit: 'month',\n        duration: i * MONTH_IN_MILLISECONDS,\n        isMajorLevel: mainLevel => mainLevel.unit === 'day' && i === 1,\n        getSteps: getSteps('month', i),\n      });\n    }\n  }\n\n  if (\n    units.indexOf(minUnit) <= units.indexOf('year') &&\n    units.indexOf(maxUnit) >= units.indexOf('year')\n  ) {\n    for (const i of [1, 10, 100, 1000]) {\n      zoomLevels.push(\n        {\n          unit: 'year',\n          duration: i * YEAR_IN_MILLISECONDS,\n          isMajorLevel: mainLevel => mainLevel.unit === 'month' && i === 1,\n          getSteps: getSteps('year', i),\n        },\n        {\n          unit: 'year',\n          duration: 2 * i * YEAR_IN_MILLISECONDS,\n          isMajorLevel: () => false,\n          getSteps: getSteps('year', 2 * i),\n        },\n        {\n          unit: 'year',\n          duration: 5 * i * YEAR_IN_MILLISECONDS,\n          isMajorLevel: () => false,\n          getSteps: getSteps('year', 5 * i),\n        }\n      );\n    }\n  }\n\n  return zoomLevels;\n}\n\nexport default (\n  locale: string = 'en',\n  minUnit: Units = 'millisecond',\n  maxUnit: Units = 'year'\n) => ({\n  parse: parse(minUnit),\n  unparse,\n  parseDuration,\n  getMinimumDuration: getMinimumDuration(minUnit),\n  isBefore,\n  diff,\n  add,\n  subtract,\n  format: format(locale, minUnit, maxUnit),\n  isImportantStep,\n  zoomLevels: getZoomLevels(minUnit, maxUnit),\n});\n","import { Calendar } from '../context';\n\ninterface InputTimelineInteractionContextContent<\n  InputDate,\n  ParsedDate,\n  InputDuration,\n  Units\n> {\n  calendar: Calendar<InputDate, ParsedDate, InputDuration, Units>;\n  startDate: InputDate;\n  endDate: InputDate;\n  setStartDate: (date: InputDate) => void;\n  setEndDate: (date: InputDate) => void;\n  minDate?: InputDate;\n  maxDate?: InputDate;\n  minDuration?: InputDuration;\n  maxDuration?: InputDuration;\n}\n\ninterface ParsedTimelineInteractionContextContent<\n  InputDate,\n  ParsedDate,\n  InputDuration,\n  Units\n> {\n  calendar: Calendar<InputDate, ParsedDate, InputDuration, Units>;\n  startDate: ParsedDate;\n  endDate: ParsedDate;\n  setStartDate: (date: ParsedDate) => void;\n  setEndDate: (date: ParsedDate) => void;\n  minDate?: ParsedDate;\n  maxDate?: ParsedDate;\n  minDuration?: number;\n  maxDuration?: number;\n}\n\nfunction parseContext<InputDate, ParsedDate, InputDuration, Units>(\n  timelineContext: InputTimelineInteractionContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  >\n) {\n  return {\n    calendar: timelineContext.calendar,\n    startDate: timelineContext.calendar.parse(timelineContext.startDate),\n    endDate: timelineContext.calendar.parse(timelineContext.endDate),\n    setStartDate: (date: ParsedDate) =>\n      timelineContext.setStartDate(timelineContext.calendar.unparse(date)),\n    setEndDate: (date: ParsedDate) =>\n      timelineContext.setEndDate(timelineContext.calendar.unparse(date)),\n    minDate: timelineContext.minDate\n      ? timelineContext.calendar.parse(timelineContext.minDate)\n      : undefined,\n    maxDate: timelineContext.maxDate\n      ? timelineContext.calendar.parse(timelineContext.maxDate)\n      : undefined,\n    minDuration: timelineContext.minDuration\n      ? timelineContext.calendar.parseDuration(timelineContext.minDuration)\n      : undefined,\n    maxDuration: timelineContext.maxDuration\n      ? timelineContext.calendar.parseDuration(timelineContext.maxDuration)\n      : undefined,\n  };\n}\n\nfunction checkMinMaxBounds<InputDate, ParsedDate, InputDuration, Units>(\n  timelineContext: ParsedTimelineInteractionContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  >\n) {\n  const {\n    calendar,\n    startDate,\n    endDate,\n    minDate,\n    maxDate,\n    minDuration,\n    maxDuration,\n  } = timelineContext;\n\n  let newStartDate = startDate;\n  let newEndDate = endDate;\n  let duration = calendar.diff(newEndDate, newStartDate);\n\n  const realMinDuration = minDuration || calendar.getMinimumDuration();\n  const realMaxDuration =\n    maxDuration ||\n    (minDate && maxDate ? calendar.diff(maxDate, minDate) : undefined);\n\n  if (duration < realMinDuration) {\n    const offset = (realMinDuration - duration) / 2;\n\n    newStartDate = calendar.subtract(newStartDate, offset);\n    newEndDate = calendar.add(newEndDate, offset);\n    duration = calendar.diff(newEndDate, newStartDate);\n  }\n\n  if (realMaxDuration && duration > realMaxDuration) {\n    const offset = (duration - realMaxDuration) / 2;\n\n    newStartDate = calendar.add(newStartDate, offset);\n    newEndDate = calendar.subtract(newEndDate, offset);\n    duration = calendar.diff(newEndDate, newStartDate);\n  }\n\n  if (minDate && calendar.isBefore(newStartDate, minDate)) {\n    const offset = calendar.diff(minDate, newStartDate);\n\n    newStartDate = calendar.add(newStartDate, offset);\n    newEndDate = calendar.add(newEndDate, offset);\n  }\n\n  if (maxDate && calendar.isBefore(maxDate, newEndDate)) {\n    const offset = calendar.diff(newEndDate, maxDate);\n\n    newStartDate = calendar.subtract(newStartDate, offset);\n    newEndDate = calendar.subtract(newEndDate, offset);\n  }\n\n  timelineContext.setStartDate(newStartDate);\n  timelineContext.setEndDate(newEndDate);\n}\n\nexport function panParsedTimeline<InputDate, ParsedDate, InputDuration, Units>(\n  timelineContext: ParsedTimelineInteractionContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  >,\n  duration: InputDuration | number\n) {\n  const { calendar, startDate, endDate } = timelineContext;\n  const parsedDuration =\n    typeof duration === 'number' ? duration : calendar.parseDuration(duration);\n\n  checkMinMaxBounds({\n    ...timelineContext,\n    startDate: calendar.add(startDate, parsedDuration),\n    endDate: calendar.add(endDate, parsedDuration),\n  });\n}\n\nexport function zoomParsedTimeline<InputDate, ParsedDate, InputDuration, Units>(\n  timelineContext: ParsedTimelineInteractionContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  >,\n  zoom: number\n) {\n  const { calendar, startDate, endDate } = timelineContext;\n  const duration = calendar.diff(endDate, startDate);\n\n  const offset = duration / 2 / (zoom < 1 ? zoom / 2 : zoom);\n\n  checkMinMaxBounds({\n    ...timelineContext,\n    startDate: calendar.add(startDate, offset),\n    endDate: calendar.subtract(endDate, offset),\n  });\n}\n\nexport function panTimeline<InputDate, ParsedDate, InputDuration, Units>(\n  timelineContext: InputTimelineInteractionContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  >,\n  duration: InputDuration\n) {\n  panParsedTimeline(parseContext(timelineContext), duration);\n}\n\nexport function zoomTimeline<InputDate, ParsedDate, InputDuration, Units>(\n  timelineContext: InputTimelineInteractionContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  >,\n  zoom: number\n) {\n  zoomParsedTimeline(parseContext(timelineContext), zoom);\n}\n","import React, { useState, useCallback, useEffect } from 'react';\n\nimport { TimelineContextContent } from '../context';\nimport { panParsedTimeline } from '.';\n\nexport default function usePanning<InputDate, ParsedDate, InputDuration, Units>(\n  panningEnabled: boolean,\n  timelineContext: TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  >,\n  timelineRef: React.RefObject<HTMLDivElement>\n) {\n  const [panningStartPosition, setPanningStartPosition] = useState<\n    number | null\n  >(null);\n\n  const onMouseDown = useCallback((event: MouseEvent) => {\n    setPanningStartPosition(event.clientX);\n  }, []);\n\n  const onMouseUp = useCallback(() => {\n    setPanningStartPosition(null);\n  }, []);\n\n  const onMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (panningStartPosition !== null && timelineRef && timelineRef.current) {\n        const distance = panningStartPosition - event.clientX;\n\n        const totalDuration = timelineContext.calendar.diff(\n          timelineContext.endDate,\n          timelineContext.startDate\n        );\n        const duration =\n          totalDuration * (distance / timelineRef.current.offsetWidth);\n\n        panParsedTimeline(timelineContext, duration);\n        setPanningStartPosition(event.clientX);\n      }\n    },\n    [panningStartPosition, timelineContext, timelineRef]\n  );\n\n  useEffect(() => {\n    if (panningEnabled && timelineRef && timelineRef.current) {\n      const ref = timelineRef.current;\n\n      ref.addEventListener('mousedown', onMouseDown);\n      ref.addEventListener('mousemove', onMouseMove);\n      ref.addEventListener('mouseup', onMouseUp);\n      ref.addEventListener('mouseleave', onMouseUp);\n\n      return () => {\n        ref.removeEventListener('mousedown', onMouseDown);\n        ref.removeEventListener('mousemove', onMouseMove);\n        ref.removeEventListener('mouseup', onMouseUp);\n        ref.removeEventListener('mouseleave', onMouseUp);\n      };\n    }\n  }, [panningEnabled, timelineRef, onMouseDown, onMouseMove, onMouseUp]);\n}\n","import React, { useContext, useState, useCallback, useEffect } from 'react';\nimport classnames from 'classnames/bind';\n\nimport { TimelineContext, TimelineContextContent } from '../context';\nimport { Theme, ThemeContext } from '../theme';\n\nimport styles from './CurrentDateBar.module.css';\n\nconst cx = classnames.bind(styles);\n\nconst CurrentDateBar = <InputDate, ParsedDate, InputDuration, Units>() => {\n  const themeContext = useContext<Theme>(ThemeContext);\n  const timelineContext = useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n  const [currentDate, setCurrentDate] = useState<ParsedDate>();\n\n  const onMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (\n        !timelineContext ||\n        !timelineContext.timelineRef ||\n        !timelineContext.timelineRef.current\n      ) {\n        return null;\n      }\n\n      const { startDate, endDate, calendar } = timelineContext;\n      const timelineBounds = timelineContext.timelineRef.current.getBoundingClientRect();\n\n      const distance = event.clientX - timelineBounds.left;\n\n      const totalDuration = calendar.diff(endDate, startDate);\n      const duration = totalDuration * (distance / timelineBounds.width);\n\n      setCurrentDate(calendar.add(startDate, duration));\n    },\n    [timelineContext]\n  );\n\n  useEffect(() => {\n    if (\n      timelineContext &&\n      timelineContext.timelineRef &&\n      timelineContext.timelineRef.current\n    ) {\n      const ref = timelineContext.timelineRef.current;\n\n      ref.addEventListener('mousemove', onMouseMove);\n\n      return () => {\n        ref.removeEventListener('mousemove', onMouseMove);\n      };\n    }\n  }, [timelineContext, onMouseMove]);\n\n  if (!timelineContext) {\n    return null;\n  }\n\n  const { startDate, endDate, calendar } = timelineContext;\n  const timelineDuration = calendar.diff(endDate, startDate);\n  const currentDateDuration = currentDate\n    ? calendar.diff(currentDate, startDate)\n    : 0;\n  const offsetLeft = (currentDateDuration / timelineDuration) * 100.0;\n\n  return (\n    <div\n      className={cx('currentDateBar')}\n      style={{\n        left: offsetLeft + '%',\n        color: themeContext.primaryColor,\n        borderColor: themeContext.tertiaryColor,\n      }}\n    >\n      <div>{currentDate && calendar.format(currentDate)}</div>\n    </div>\n  );\n};\n\nexport default CurrentDateBar;\n","import React, { useContext } from 'react';\n\nimport { TimelineContext, TimelineContextContent } from '../context';\nimport { panParsedTimeline } from '.';\n\ninterface Props<InputDuration> {\n  renderer: (pan: (duration: InputDuration) => void) => JSX.Element;\n}\n\nconst PanControl = <InputDate, ParsedDate, InputDuration, Units>(\n  props: React.PropsWithChildren<Props<InputDuration>>\n) => {\n  const timelineContext = useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n\n  return props.renderer((duration: InputDuration) => {\n    if (timelineContext) {\n      panParsedTimeline(timelineContext, duration);\n    }\n  });\n};\n\nexport default PanControl;\n","import React, { useContext } from 'react';\n\nimport { TimelineContext, TimelineContextContent } from '../context';\nimport { zoomParsedTimeline } from '.';\n\ninterface Props {\n  renderer: (zoom: (zoom: number) => void) => JSX.Element;\n}\n\nconst ZoomControl = <InputDate, ParsedDate, InputDuration, Units>(\n  props: React.PropsWithChildren<Props>\n) => {\n  const timelineContext = useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n\n  return props.renderer((zoom: number) => {\n    if (timelineContext) {\n      zoomParsedTimeline(timelineContext, zoom);\n    }\n  });\n};\n\nexport default ZoomControl;\n","import React, { useContext } from 'react';\nimport classnames from 'classnames/bind';\n\nimport { TimelineContext, TimelineContextContent } from '../context';\nimport { Theme, ThemeContext } from '../theme';\n\nimport styles from './StepBars.module.css';\n\nconst cx = classnames.bind(styles);\n\nconst StepBars = <InputDate, ParsedDate, InputDuration, Units>() => {\n  const themeContext = useContext<Theme>(ThemeContext);\n  const timelineContext = useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n\n  const getColor = (levelIndex: number, isImportant: boolean) => {\n    if (levelIndex === 0) {\n      return isImportant\n        ? themeContext.secondaryColor\n        : themeContext.primaryColor;\n    } else if (levelIndex === 1) {\n      return isImportant\n        ? themeContext.tertiaryColor\n        : themeContext.secondaryColor;\n    } else {\n      return themeContext.tertiaryColor;\n    }\n  };\n\n  return (\n    <div className={cx('stepBars')}>\n      {timelineContext &&\n        timelineContext.stepLevels.flatMap((level, levelIndex) => {\n          return level.steps.map((step, stepIndex) => {\n            return (\n              step.offset > 0 &&\n              step.offset <= 100 && (\n                <div\n                  key={`stepBar-${levelIndex}-${stepIndex}`}\n                  className={cx('stepBar')}\n                  style={{\n                    left: step.offset + '%',\n                    borderColor: getColor(\n                      levelIndex,\n                      timelineContext.calendar.isImportantStep(step)\n                    ),\n                  }}\n                />\n              )\n            );\n          });\n        })}\n    </div>\n  );\n};\n\nexport default StepBars;\n","import React, { useContext } from 'react';\nimport classnames from 'classnames/bind';\n\nimport { TimelineContext, TimelineContextContent } from '../context';\nimport { Theme, ThemeContext } from '../theme';\nimport StepBars from './StepBars';\n\nimport styles from './StepLabels.module.css';\n\nconst cx = classnames.bind(styles);\n\ninterface Props {\n  className?: string;\n}\n\nconst StepLabels = <InputDate, ParsedDate, InputDuration, Units>(\n  props: Props\n) => {\n  const themeContext = useContext<Theme>(ThemeContext);\n  const timelineContext = useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n\n  const getColor = (stepLevel: number, isImportant: boolean) => {\n    if (stepLevel === 0) {\n      return isImportant\n        ? themeContext.secondaryColor\n        : themeContext.primaryColor;\n    } else if (stepLevel === 1) {\n      return isImportant\n        ? themeContext.tertiaryColor\n        : themeContext.secondaryColor;\n    } else {\n      return themeContext.tertiaryColor;\n    }\n  };\n\n  return (\n    <div className={cx('stepLabels')}>\n      <StepBars />\n      {timelineContext &&\n        timelineContext.stepLevels.map((stepLevel, stepLevelIndex) => (\n          <div\n            key={`stepLevel-${stepLevelIndex}`}\n            className={cx(\n              stepLevelIndex === 0\n                ? 'stepLabelsPrimary'\n                : 'stepLabelsSecondary',\n              `stepLevel-${stepLevelIndex}`\n            )}\n          >\n            {stepLevel.steps.map((step, stepIndex) => {\n              let left = step.offset;\n              let width = step.size;\n\n              if (stepLevelIndex > 0) {\n                if (step.offset < 0) {\n                  left = 0;\n                  width = width + step.offset;\n                }\n\n                if (step.offset + step.size > 100) {\n                  width = width - (step.offset + step.size - 100);\n                }\n              }\n\n              return (\n                <div\n                  key={`stepLabel${stepLevelIndex}-${stepIndex}`}\n                  className={cx(\n                    props.className,\n                    'stepLabel',\n                    `stepLabel-${step.scale}-${step.unit}`,\n                    timelineContext.calendar.isImportantStep(step)\n                      ? 'stepLabelImportant'\n                      : ''\n                  )}\n                  style={{\n                    left: left + '%',\n                    width: width + '%',\n                    color: getColor(\n                      stepLevelIndex,\n                      timelineContext.calendar.isImportantStep(step)\n                    ),\n                  }}\n                >\n                  <div>\n                    {timelineContext.calendar.format(\n                      step.date,\n                      step.unit,\n                      stepLevelIndex === 0\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default StepLabels;\n","import React, { useEffect, useCallback, useContext } from 'react';\nimport classnames from 'classnames';\n\nimport { TimelineContext, TimelineContextContent } from './context';\n\nimport styles from './Timeline.module.css';\n\ntype RowElement = {\n  left: number;\n  right: number;\n  width: number;\n  height: number;\n};\n\ninterface Props {\n  fixedHeight?: boolean;\n  fullHeight?: boolean;\n  className?: string;\n}\n\nconst TimelineRow = <InputDate, ParsedDate, InputDuration, Units>(\n  props: React.PropsWithChildren<Props>\n) => {\n  useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n\n  const { fixedHeight, fullHeight, className } = props;\n\n  type EventRefs = {\n    containerRef: React.RefObject<HTMLDivElement>;\n    barSizeRef: React.RefObject<HTMLDivElement>;\n    labelSizeRef: React.RefObject<HTMLDivElement>;\n  };\n\n  const rowRef = React.createRef<HTMLDivElement>();\n  const refs: EventRefs[] = [];\n\n  const getEventBoundingBox = useCallback((ref: EventRefs) => {\n    const containerRef =\n      ref.containerRef.current &&\n      ref.containerRef.current.getBoundingClientRect();\n    const barSizeRef =\n      ref.barSizeRef.current && ref.barSizeRef.current.getBoundingClientRect();\n    const labelSizeRef =\n      ref.labelSizeRef.current &&\n      ref.labelSizeRef.current.getBoundingClientRect();\n\n    const getMax = (getAttribute: (e: ClientRect) => number) =>\n      Math.max(\n        containerRef ? getAttribute(containerRef) : Number.NEGATIVE_INFINITY,\n        barSizeRef ? getAttribute(barSizeRef) : Number.NEGATIVE_INFINITY,\n        labelSizeRef ? getAttribute(labelSizeRef) : Number.NEGATIVE_INFINITY\n      );\n\n    const getMin = (getAttribute: (e: ClientRect) => number) =>\n      Math.min(\n        containerRef ? getAttribute(containerRef) : Number.POSITIVE_INFINITY,\n        barSizeRef ? getAttribute(barSizeRef) : Number.POSITIVE_INFINITY,\n        labelSizeRef ? getAttribute(labelSizeRef) : Number.POSITIVE_INFINITY\n      );\n\n    return {\n      left: getMin(e => e.left),\n      right: getMax(e => e.right),\n      width: getMax(e => e.width),\n      height: getMax(e => e.height),\n    };\n  }, []);\n\n  useEffect(() => {\n    const lines: RowElement[][] = [[]];\n    const linesHeight = [0];\n    const lineByRefIndex: { [key: number]: number } = {};\n\n    const canBeAddedOnLine = (\n      currentLine: RowElement[],\n      currentElement: RowElement\n    ) => {\n      return !currentLine.some(\n        testedElement =>\n          (currentElement.left <= testedElement.left &&\n            currentElement.right >= testedElement.right) ||\n          (testedElement.left <= currentElement.left &&\n            testedElement.right >= currentElement.right) ||\n          (currentElement.left >= testedElement.left &&\n            currentElement.left <= testedElement.right) ||\n          (testedElement.left >= currentElement.left &&\n            testedElement.left <= currentElement.right) ||\n          (currentElement.right >= testedElement.left &&\n            currentElement.right <= testedElement.right) ||\n          (testedElement.right >= currentElement.left &&\n            testedElement.right <= currentElement.right)\n      );\n    };\n\n    refs.forEach((ref, refIndex) => {\n      const currentElement = getEventBoundingBox(ref);\n      let foundLine = false;\n\n      for (\n        let currentLineIndex = 0;\n        currentLineIndex < lines.length;\n        currentLineIndex++\n      ) {\n        if (canBeAddedOnLine(lines[currentLineIndex], currentElement)) {\n          foundLine = true;\n          lines[currentLineIndex].push(currentElement);\n          linesHeight[currentLineIndex] = Math.max(\n            linesHeight[currentLineIndex] || 0,\n            currentElement.height\n          );\n          lineByRefIndex[refIndex] = currentLineIndex;\n          break;\n        }\n      }\n\n      if (!foundLine) {\n        lines.push([currentElement]);\n        linesHeight[lines.length - 1] = currentElement.height;\n        lineByRefIndex[refIndex] = lines.length - 1;\n      }\n    });\n\n    refs.forEach((ref, refIndex) => {\n      if (ref.containerRef.current) {\n        ref.containerRef.current.style.top =\n          20 * lineByRefIndex[refIndex] +\n          linesHeight.reduce((acc, height, index) => {\n            return acc + (index < lineByRefIndex[refIndex] ? height : 0);\n          }, 0) +\n          'px';\n      }\n    });\n\n    if (rowRef && rowRef.current && !fixedHeight && !fullHeight) {\n      rowRef.current.style.height =\n        20 * (lines.length - 1) +\n        linesHeight.reduce((acc, height) => {\n          return acc + height;\n        }, 0) +\n        'px';\n    }\n  });\n\n  return (\n    <div\n      className={classnames(\n        styles.timelineRow,\n        fullHeight ? styles.timelineRowFullHeight : null,\n        className\n      )}\n      ref={rowRef}\n    >\n      {React.Children.map(props.children, child => {\n        if (React.isValidElement(child)) {\n          const sizeRefs = {\n            containerRef: React.createRef<HTMLDivElement>(),\n            barSizeRef: React.createRef<HTMLDivElement>(),\n            labelSizeRef: React.createRef<HTMLDivElement>(),\n          };\n\n          refs.push(sizeRefs);\n          return React.cloneElement(child, { sizeRefs, fullHeight });\n        }\n      })}\n    </div>\n  );\n};\n\nexport default TimelineRow;\n","import React, { useEffect } from 'react';\n\nimport { PeriodVariantProps } from './Period';\n\nimport styles from './Period.module.css';\n\nconst LabelAbovePeriod = (props: PeriodVariantProps) => {\n  const { sizeRefs, label, position, color } = props;\n\n  const labelLeftOffset =\n    position === 'tailOnly'\n      ? (-props.containerLeft / props.containerWidth) * 100\n      : 0;\n\n  useEffect(() => {\n    if (\n      sizeRefs &&\n      sizeRefs.labelSizeRef.current &&\n      sizeRefs.barSizeRef.current &&\n      position === 'tailOnly'\n    ) {\n      const labelWidth = sizeRefs.labelSizeRef.current.offsetWidth;\n      const barWidth = sizeRefs.barSizeRef.current.offsetWidth;\n\n      if (labelWidth > barWidth) {\n        sizeRefs.labelSizeRef.current.style.marginLeft = '0%';\n      } else {\n        const diff = labelWidth - ((100 - labelLeftOffset) / 100) * barWidth;\n\n        if (diff > 0) {\n          sizeRefs.labelSizeRef.current.style.marginLeft =\n            labelLeftOffset - (diff / barWidth) * 100 + '%';\n        }\n      }\n    }\n  });\n\n  return (\n    <div className={styles.labelAbove}>\n      <div\n        className={styles.labelAboveLabel}\n        ref={sizeRefs ? sizeRefs.labelSizeRef : null}\n        style={{ marginLeft: labelLeftOffset + '%', color }}\n      >\n        {label}\n      </div>\n      <div\n        className={styles.labelAboveBar}\n        ref={sizeRefs ? sizeRefs.barSizeRef : null}\n        style={{ backgroundColor: color }}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(LabelAbovePeriod);\n","import React, { useContext } from 'react';\nimport classnames from 'classnames/bind';\n\nimport { TimelineContext, TimelineContextContent } from '../context';\nimport { Theme, ThemeContext } from '../theme';\n\nimport LabelAbovePeriod from './LabelAbovePeriod';\n\nimport styles from './Period.module.css';\n\nconst cx = classnames.bind(styles);\n\nexport type EventRefs = {\n  containerRef: React.RefObject<HTMLDivElement>;\n  barSizeRef: React.RefObject<HTMLDivElement>;\n  labelSizeRef: React.RefObject<HTMLDivElement>;\n};\n\ntype PeriodPosition =\n  | 'outside'\n  | 'inside'\n  | 'headOnly'\n  | 'tailOnly'\n  | 'cropped';\n\nexport interface PeriodVariantProps {\n  label: string;\n  sizeRefs: EventRefs;\n  position: PeriodPosition;\n  containerLeft: number;\n  containerWidth: number;\n  color: string;\n}\n\ninterface Props<InputDate> {\n  startDate: InputDate;\n  endDate: InputDate;\n  label: string;\n  className?: string;\n  color?: string;\n  component?: React.FunctionComponent<PeriodVariantProps>;\n  sizeRefs?: EventRefs;\n  fullHeight?: boolean;\n}\n\nconst TimelinePeriod = <InputDate, ParsedDate, InputDuration, Units>(\n  props: Props<InputDate>\n) => {\n  const themeContext = useContext<Theme>(ThemeContext);\n  const timelineContext = useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n\n  if (!timelineContext) {\n    return null;\n  }\n\n  const {\n    startDate,\n    endDate,\n    label,\n    className,\n    color,\n    component,\n    sizeRefs,\n    fullHeight,\n  } = props;\n  const {\n    startDate: timelineStartDate,\n    endDate: timelineEndDate,\n    calendar,\n  } = timelineContext;\n\n  const parsedStartDate = calendar.parse(startDate);\n  const parsedEndDate = calendar.parse(endDate);\n\n  if (!calendar.isBefore(parsedStartDate, parsedEndDate)) {\n    console.error('The endDate is before the startDate prop for the period');\n    return null;\n  }\n\n  const timelineDuration = calendar.diff(timelineEndDate, timelineStartDate);\n  const periodStartDateOffset = calendar.diff(\n    parsedStartDate,\n    timelineStartDate\n  );\n  const periodEndDateOffset = calendar.diff(parsedEndDate, timelineStartDate);\n\n  const offsetLeft = (periodStartDateOffset / timelineDuration) * 100.0;\n  const width =\n    ((periodEndDateOffset - periodStartDateOffset) / timelineDuration) * 100.0;\n\n  if (!sizeRefs) {\n    return null;\n  }\n\n  const periodPosition =\n    offsetLeft < 0 && offsetLeft + width > 0\n      ? 'tailOnly'\n      : offsetLeft >= 0 && offsetLeft + width <= 100\n      ? 'inside'\n      : offsetLeft < 100 && offsetLeft + width > 100\n      ? 'headOnly'\n      : offsetLeft < 0 && offsetLeft + width > 100\n      ? 'cropped'\n      : 'outside';\n\n  let DefaultPeriod: React.FunctionComponent<PeriodVariantProps> = LabelAbovePeriod;\n\n  if (component) {\n    DefaultPeriod = component;\n  }\n\n  const customStyle: React.CSSProperties = {\n    left: offsetLeft + '%',\n    width: width + '%',\n  };\n\n  if (fullHeight) {\n    customStyle.height = '100%';\n  }\n\n  return (\n    <div\n      ref={sizeRefs.containerRef}\n      className={cx('period', className)}\n      style={customStyle}\n    >\n      <DefaultPeriod\n        label={label}\n        sizeRefs={sizeRefs}\n        position={periodPosition}\n        containerLeft={offsetLeft}\n        containerWidth={width}\n        color={color || themeContext.eventColor}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(TimelinePeriod);\n","import React from 'react';\n\nimport { PeriodVariantProps } from './Period';\n\nimport styles from './Event.module.css';\n\nconst LabelAboveEvent = (props: PeriodVariantProps) => {\n  const { sizeRefs, label, color } = props;\n\n  return (\n    <div className={styles.labelAbove}>\n      <div className={styles.labelAboveLabelContainer}>\n        <div\n          className={styles.labelAboveLabel}\n          style={{ color }}\n          ref={sizeRefs ? sizeRefs.labelSizeRef : null}\n        >\n          {label}\n        </div>\n      </div>\n      <div\n        className={styles.labelAboveBar}\n        style={{ backgroundColor: color }}\n        ref={sizeRefs ? sizeRefs.barSizeRef : null}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(LabelAboveEvent);\n","import React, { useContext } from 'react';\n\nimport { TimelineContext, TimelineContextContent } from '../context';\nimport { Theme, ThemeContext } from '../theme';\n\nimport Period, { PeriodVariantProps, EventRefs } from './Period';\n\nimport LabelAboveEvent from './LabelAboveEvent';\n\ninterface Props<InputDate> {\n  date: InputDate;\n  label: string;\n  className?: string;\n  color?: string;\n  component?: React.FunctionComponent<PeriodVariantProps>;\n  sizeRefs?: EventRefs;\n}\n\nconst TimelineEvent = <InputDate, ParsedDate, InputDuration, Units>(\n  props: Props<InputDate>\n) => {\n  const themeContext = useContext<Theme>(ThemeContext);\n  const timelineContext = useContext<TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > | null>(TimelineContext);\n\n  const { label, date, className, color, component, sizeRefs } = props;\n\n  if (!timelineContext) {\n    return null;\n  }\n\n  const parsedDate = timelineContext.calendar.parse(date);\n  const endDate = timelineContext.calendar.add(\n    parsedDate,\n    timelineContext.calendar.getMinimumDuration()\n  );\n\n  let DefaultPeriod: React.FunctionComponent<PeriodVariantProps> = LabelAboveEvent;\n\n  if (component) {\n    DefaultPeriod = component;\n  }\n\n  return (\n    <Period\n      label={label}\n      className={className}\n      startDate={date}\n      endDate={endDate}\n      component={DefaultPeriod}\n      sizeRefs={sizeRefs}\n      color={color || themeContext.eventColor}\n    />\n  );\n};\n\nexport default React.memo(TimelineEvent);\n","import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport classnames from 'classnames/bind';\nimport ReactResizeDetector from 'react-resize-detector';\n\nimport {\n  TimelineContext,\n  TimelineContextContent,\n  Calendar,\n  CalendarStep,\n  DisplayStep,\n} from './context';\n\nimport { Theme, ThemeContext, defaultTheme } from './theme';\n\nimport defaultCalendar from './calendar';\n\nimport useMousePanning from './interactions/useMousePanning';\n\nimport CurrentDateBar from './interactions/CurrentDateBar';\nimport PanControl from './interactions/PanControl';\nimport ZoomControl from './interactions/ZoomControl';\n\nimport StepBars from './Steps/StepBars';\nimport StepLabels from './Steps/StepLabels';\n\nimport TimelineRow from './TimelineRow';\nimport Event from './Period/Event';\nimport Period from './Period/Period';\n\nimport styles from './Timeline.module.css';\n\nconst cx = classnames.bind(styles);\n\ninterface Props<InputDate, ParsedDate, InputDuration, Units>\n  extends React.HTMLAttributes<HTMLDivElement> {\n  startDate: InputDate;\n  endDate: InputDate;\n  className?: string;\n  stepMinWidth: string | number;\n  minDate?: InputDate;\n  maxDate?: InputDate;\n  minDuration?: InputDuration;\n  maxDuration?: InputDuration;\n  mousePanning: boolean;\n  calendar: Calendar<InputDate, ParsedDate, InputDuration, Units>;\n  theme: Theme;\n}\n\nconst Timeline = <InputDate, ParsedDate, InputDuration, Units>(\n  props: React.PropsWithChildren<\n    Props<InputDate, ParsedDate, InputDuration, Units>\n  >\n) => {\n  const {\n    calendar,\n    startDate,\n    endDate,\n    stepMinWidth,\n    className,\n    minDate,\n    maxDate,\n    minDuration,\n    maxDuration,\n    mousePanning,\n    theme,\n    children,\n    ...rest\n  } = props;\n\n  const containerRef = React.createRef<HTMLDivElement>();\n  const [containerWidth, setContainerWidth] = useState(1);\n\n  const [parsedStartDate, setParsedStartDate] = useState(\n    calendar.parse(startDate)\n  );\n  const [parsedEndDate, setParsedEndDate] = useState(calendar.parse(endDate));\n  const previousDateValues = useRef({ startDate, endDate });\n\n  const getParsedStepMinWidth = useCallback(() => {\n    const unit = String(stepMinWidth).indexOf('%') !== -1 ? '%' : 'px';\n    const value = parseFloat(stepMinWidth as string);\n\n    if (value <= 0) {\n      console.error('The stepMinWidth has zero or negative value');\n    }\n\n    return {\n      value: Math.max(0, value),\n      unit,\n    };\n  }, [stepMinWidth]);\n\n  const computeStepsPosition = useCallback(\n    (\n      steps: CalendarStep<ParsedDate, Units>[],\n      startDate: ParsedDate,\n      duration: number\n    ) => {\n      let lastOffset: number | null = null;\n\n      return steps.reduceRight<DisplayStep<ParsedDate, Units>[]>(\n        (acc, step) => {\n          const offset = (calendar.diff(step.date, startDate) / duration) * 100;\n          const size = lastOffset !== null ? lastOffset - offset : null;\n\n          lastOffset = offset;\n\n          return size !== null ? [{ ...step, offset, size }, ...acc] : acc;\n        },\n        []\n      );\n    },\n    [calendar]\n  );\n\n  const computeStepLevels = useCallback(\n    (startDate: ParsedDate, endDate: ParsedDate) => {\n      const duration = calendar.diff(endDate, startDate);\n\n      const parsedStepMinWidth = getParsedStepMinWidth();\n      const maxSteps =\n        parsedStepMinWidth.unit === '%'\n          ? 100 / parsedStepMinWidth.value\n          : containerWidth / parsedStepMinWidth.value;\n\n      const stepMinDuration = duration / maxSteps;\n\n      const [\n        chosenMainLevel,\n        ...chosenSecondaryLevels\n      ] = calendar.zoomLevels.filter(zoomLevel => {\n        return stepMinDuration < zoomLevel.duration;\n      });\n\n      const mainLevel = chosenMainLevel\n        ? chosenMainLevel\n        : calendar.zoomLevels[calendar.zoomLevels.length - 1];\n      const secondaryLevels = chosenSecondaryLevels.filter(zoomLevel =>\n        zoomLevel.isMajorLevel(mainLevel)\n      );\n\n      return [mainLevel, ...secondaryLevels].map(level => {\n        return {\n          steps: computeStepsPosition(\n            level.getSteps(startDate, endDate),\n            startDate,\n            duration\n          ),\n        };\n      });\n    },\n    [calendar, computeStepsPosition, containerWidth, getParsedStepMinWidth]\n  );\n\n  const onResize = useCallback((width: number) => {\n    setContainerWidth(width);\n  }, []);\n\n  useEffect(() => {\n    if (startDate !== previousDateValues.current.startDate) {\n      setParsedStartDate(calendar.parse(startDate));\n    }\n\n    if (endDate !== previousDateValues.current.endDate) {\n      setParsedEndDate(calendar.parse(endDate));\n    }\n  }, [calendar, startDate, endDate]);\n\n  useEffect(() => {\n    previousDateValues.current = { startDate, endDate };\n  });\n\n  const parsedMinDate = minDate ? calendar.parse(minDate) : undefined;\n  const parsedMaxDate = maxDate ? calendar.parse(maxDate) : undefined;\n\n  const parsedMinDuration = minDuration\n    ? calendar.parseDuration(minDuration)\n    : undefined;\n  const parsedMaxDuration = maxDuration\n    ? calendar.parseDuration(maxDuration)\n    : undefined;\n\n  const stepLevels = computeStepLevels(parsedStartDate, parsedEndDate);\n\n  const timelineContext: TimelineContextContent<\n    InputDate,\n    ParsedDate,\n    InputDuration,\n    Units\n  > = {\n    calendar,\n    stepLevels,\n    startDate: parsedStartDate,\n    endDate: parsedEndDate,\n    setStartDate: setParsedStartDate,\n    setEndDate: setParsedEndDate,\n    timelineRef: containerRef,\n    minDate: parsedMinDate,\n    maxDate: parsedMaxDate,\n    minDuration: parsedMinDuration,\n    maxDuration: parsedMaxDuration,\n  };\n\n  useMousePanning(mousePanning, timelineContext, containerRef);\n\n  if (!calendar.isBefore(parsedStartDate, parsedEndDate)) {\n    console.error('The endDate is before the startDate prop');\n    return null;\n  }\n\n  if (parsedMinDate && calendar.isBefore(parsedStartDate, parsedMinDate)) {\n    console.error('The minDate is after the startDate prop');\n    return null;\n  }\n\n  if (parsedMaxDate && calendar.isBefore(parsedMaxDate, parsedEndDate)) {\n    console.error('The maxDate is before the endDate prop');\n    return null;\n  }\n\n  if (\n    parsedMinDuration &&\n    parsedMaxDuration &&\n    parsedMinDuration > parsedMaxDuration\n  ) {\n    console.error('The minDuration is bigger than the maxDuration');\n    return null;\n  }\n\n  if (parsedMinDuration && parsedMinDuration < calendar.getMinimumDuration()) {\n    console.error(\n      'The minDuration is lesser than the calendar minimum duration'\n    );\n    return null;\n  }\n\n  const timelineDuration = calendar.diff(parsedEndDate, parsedStartDate);\n\n  if (parsedMinDuration && parsedMinDuration > timelineDuration) {\n    console.error('The minDuration is bigger than the timeline duration');\n    return null;\n  }\n\n  if (parsedMaxDuration && parsedMaxDuration < timelineDuration) {\n    console.error('The maxDuration is lesser than the timeline duration');\n    return null;\n  }\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <div\n        className={cx('timeline', className)}\n        style={{ backgroundColor: theme.backgroundColor }}\n        ref={containerRef}\n        {...rest}\n      >\n        <ReactResizeDetector handleWidth onResize={onResize} />\n        <TimelineContext.Provider value={timelineContext}>\n          {children}\n        </TimelineContext.Provider>\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nTimeline.defaultProps = {\n  stepMinWidth: '40px',\n  mousePanning: true,\n  calendar: defaultCalendar(),\n  theme: defaultTheme,\n};\n\nTimeline.StepBars = StepBars;\nTimeline.CurrentDateBar = CurrentDateBar;\nTimeline.StepLabels = StepLabels;\n\nTimeline.PanControl = PanControl;\nTimeline.ZoomControl = ZoomControl;\n\nTimeline.Row = TimelineRow;\nTimeline.Period = Period;\nTimeline.Event = Event;\n\nexport default Timeline;\n","import Timeline from './Timeline';\n\nimport { panTimeline, zoomTimeline } from './interactions';\n\nimport calendar from './calendar';\n\nconst interactions = {\n  pan: panTimeline,\n  zoom: zoomTimeline,\n};\n\nexport { Timeline, interactions, calendar };\n\nexport default {\n  Timeline,\n  interactions,\n  calendar,\n};\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz'\nimport { Timeline } from './index.ts';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"hello-world\"\n    }}>{`Hello world`}</h1>\n    <p>{`Hello, I'm a test mdx file!`}</p>\n    <Playground __position={0} __code={'<Timeline\\n  startDate={\\'2018-09-01\\'}\\n  endDate={\\'2019-06-30\\'}\\n  theme={{\\n    backgroundColor: \\'#323232\\',\\n    primaryColor: \\'#AAA\\',\\n    secondaryColor: \\'#AA0\\',\\n    tertiaryColor: \\'#A50\\',\\n    eventColor: \\'#81996A\\',\\n  }}\\n>\\n  <Timeline.StepBars />\\n  <Timeline.Row>\\n    <Timeline.Event date=\\\"2018-12-12\\\" label=\\\"Test\\\" />\\n  </Timeline.Row>\\n  <Timeline.Row fixedHeight>\\n    <Timeline.StepLabels />\\n  </Timeline.Row>\\n</Timeline>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Timeline\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Timeline startDate={'2018-09-01'} endDate={'2019-06-30'} theme={{\n        backgroundColor: '#323232',\n        primaryColor: '#AAA',\n        secondaryColor: '#AA0',\n        tertiaryColor: '#A50',\n        eventColor: '#81996A'\n      }} mdxType=\"Timeline\">\n    <Timeline.StepBars />\n    <Timeline.Row>\n      <Timeline.Event date=\"2018-12-12\" label=\"Test\" />\n    </Timeline.Row>\n    <Timeline.Row fixedHeight>\n      <Timeline.StepLabels />\n    </Timeline.Row>\n  </Timeline>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}